{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Friends/Friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPost.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profileReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogsReducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","redux/friendsReducer.ts","components/Friends/FriendsContainer.tsx","components/Friends/Friends.tsx","App.tsx","redux/sideBarReducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","Navbar","nav","item","to","PATH","PROFILE","activeClassName","active","DIALOGS","NEWS","MUSIC","FIND_FRIENDS","SETTINGS","ProfileInfo","cover","contentInfo","mainAvatar","describeProfile","ADD_POST","UPDATE_NEW_POST","initialState","posts","id","message","likeCount","newPostText","Post","props","MyPostsContainer","connect","state","profilePage","dispatch","addPost","type","postText","updateNewPost","newText","onPostChangeAC","postsElement","map","p","postBlock","value","onChange","e","currentTarget","button","onClick","Profile","content","News","Music","Settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE","dialogs","name","messages","newTextMessage","DialogItem","path","dialog","Message","DialogsContainer","dialogPage","addMessage","messageText","addMessageAC","onMessageChange","newMessage","onMessageChangeAC","dialogElements","d","messagesElements","msg","placeholder","dialogsItem","friends","FriendsContainer","friendsPage","follow","userId","followAC","unfollow","unfollowAC","setFriends","setFriendsAC","length","photoUrl","nickname","status","location","country","city","f","friendsItem","generalBlock","avatar","info","buttonFollow","fId","App","exact","render","rootReducer","combineReducers","action","newPost","Date","getTime","sidebar","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,oBCAjFD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,aAAe,8BAA8B,SAAW,4B,mBCA7PD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,WAAa,gCAAgC,MAAQ,2BAA2B,gBAAkB,uC,gBCAnKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,0B,iBCA9ID,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,yB,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,kBCA/DD,EAAOC,QAAU,CAAC,OAAS,yB,6ICaZC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yCCNP,SAASQ,IACZ,OAEQ,wBAAQC,UAAWC,IAAEC,OAArB,SACI,qBAAKC,IAAI,oF,4BCFlB,SAASC,IAEZ,OACQ,sBAAKJ,UAAWC,IAAEI,IAAlB,UACI,qBAAKL,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKC,QAASC,gBAAiBT,IAAEU,OAA9C,uBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKI,QAASF,gBAAiBT,IAAEU,OAA9C,wBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKK,KAAMH,gBAAiBT,IAAEU,OAA3C,oBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKM,MAAOJ,gBAAiBT,IAAEU,OAA5C,qBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKO,aAAcL,gBAAiBT,IAAEU,OAAnD,uBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,GAAKQ,SAAUN,gBAAiBT,IAAEU,OAA/C,2B,sCCrBb,SAASM,IACZ,OACI,gCACI,qBAAKjB,UAAWC,IAAEiB,MAAlB,SACI,qBACIf,IAAI,8GAEZ,sBAAKH,UAAWC,IAAEkB,YAAlB,UACI,qBAAKnB,UAAWC,IAAEmB,WAAlB,SACI,qBAAKjB,IAAI,wDAEb,qBAAKH,UAAWC,IAAEoB,gBAAlB,0C,mBCdVC,EAAW,WACXC,EAAkB,kBAalBC,EAAgC,CAC9BC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,UAAW,IAChD,CAACF,GAAI,EAAGC,QAAS,qBAAsBC,UAAW,KAEtDC,YAAa,I,kCCXd,SAASC,EAAKC,GACjB,OACI,8BACI,qBAAK/B,UAAWC,IAAEwB,MAAlB,SACI,sBAAKzB,UAAWC,IAAEK,KAAlB,UACI,qBAAKH,IAAI,sDACR4B,EAAMJ,QACP,8BACI,0CAAaI,EAAMH,UAAnB,gB,YCiBXI,EAAmBC,aAjBN,SAACC,GACvB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACC,GACxB,MAAO,CACHC,QAAS,SAACV,GACNS,EFoBD,CACHE,KAAMhB,EACNiB,SEtBuBZ,KAEvBa,cAAe,SAACC,GACZL,EFuBkB,SAACK,GAC3B,MAAO,CACHH,KAAMf,EACNkB,QAASA,GE1BIC,CAAeD,QAKJR,ECrBzB,SAAiBF,GAEpB,IAQIY,EACAZ,EAAMI,YAAYV,MAAMmB,KAAI,SAAAC,GAAC,OAAI,cAACf,EAAD,CAAiBJ,GAAImB,EAAEnB,GAAIC,QAASkB,EAAElB,QAASC,UAAWiB,EAAEjB,WAAjDiB,EAAEnB,OAElD,OACI,sBAAK1B,UAAWC,IAAE6C,UAAlB,UACI,gCACI,2CACA,gCACI,8BACI,0BAAUC,MAAOhB,EAAMI,YAAYN,YAAamB,SAb/C,SAACC,GAClBlB,EAAMS,cAAcS,EAAEC,cAAcH,YAcxB,8BACI,wBAAQ/C,UAAWC,IAAEkD,OAAQC,QApBjC,WACZrB,EAAMM,QAAQN,EAAMI,YAAYN,aAChCE,EAAMS,cAAc,KAkBJ,8BAIZ,qBAAKxC,UAAWC,IAAEwB,MAAlB,SACKkB,UC7BV,SAASU,EAAQtB,GAEpB,OACI,sBAAK/B,UAAWC,IAAEqD,QAAlB,UACI,cAACrC,EAAD,IACA,cAACe,EAAD,O,WCdL,SAASuB,IACZ,OACI,uCCFD,SAASC,IACZ,OACI,wCCFD,SAASC,IACZ,OACI,2C,UCHFC,EAAc,cACdC,EAAqB,qBAgBrBnC,EAA+B,CACjCoC,QAAS,CACL,CAAClC,GAAI,EAAGmC,KAAM,SACd,CAACnC,GAAI,EAAGmC,KAAM,SACd,CAACnC,GAAI,EAAGmC,KAAM,QACd,CAACnC,GAAI,EAAGmC,KAAM,UAElBC,SAAU,CACN,CAACpC,GAAI,EAAGC,QAAS,oBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,cACjB,CAACD,GAAI,EAAGC,QAAS,uBAErBoC,eAAgB,I,kCCpBb,SAASC,EAAWjC,GACvB,IAAIkC,EAAO,YAAclC,EAAML,GAC/B,OACI,qBAAK1B,UAAWC,IAAEiE,OAAlB,SACI,cAAC,IAAD,CAAS3D,GAAI0D,EAAMvD,gBAAiBT,IAAEU,OAAtC,SAA+CoB,EAAM8B,S,qBCP1D,SAASM,EAAQpC,GACpB,OACI,qBAAK/B,UAAWC,IAAE0B,QAAlB,SACKI,EAAMJ,UC8BnB,IAiBayC,EAAmBnC,aAjBR,SAACC,GACrB,MAAO,CACHmC,WAAYnC,EAAMmC,eAIC,SAACjC,GACxB,MAAO,CACHkC,WAAY,SAACC,GACTnC,EHIgB,SAACmC,GACzB,MAAO,CACHjC,KAAMoB,EACNa,YAAaA,GGPAC,CAAaD,KAE1BE,gBAAiB,SAACC,GACdtC,EHQqB,SAACsC,GAC9B,MAAO,CACHpC,KAAMqB,EACNe,WAAYA,GGXCC,CAAkBD,QAKPzC,EC7CzB,SAAiBF,GAGpB,IAQI6C,EACA7C,EAAMsC,WAAWT,QAAQhB,KAAI,SAAAiC,GAAC,OAAI,cAACb,EAAD,CAAuBH,KAAMgB,EAAEhB,KAAMnC,GAAImD,EAAEnD,IAA1BmD,EAAEnD,OAErDoD,EACA/C,EAAMsC,WAAWP,SAASlB,KAAI,SAAAmC,GAAG,OAAI,cAACZ,EAAD,CAAsBxC,QAASoD,EAAIpD,QAASD,GAAIqD,EAAIrD,IAAtCqD,EAAIrD,OAE3D,OACI,qCACI,0BAAUqB,MAAOhB,EAAMsC,WAAWN,eACxBf,SAbM,SAACC,GACrBlB,EAAM0C,gBAAgBxB,EAAEC,cAAcH,QAaxBiC,YAAa,uBAEvB,8BACI,wBAAQhF,UAAWC,IAAEkD,OAAQC,QArBtB,WACfrB,EAAMuC,WAAWvC,EAAMsC,WAAWN,gBAClChC,EAAM0C,gBAAgB,KAmBd,2BAGJ,sBAAKzE,UAAWC,IAAE2D,QAAlB,UAEI,qBAAK5D,UAAWC,IAAEgF,YAAlB,SACKL,IAEL,qBAAK5E,UAAWC,IAAE6D,SAAlB,SACKgB,a,iBC7BftD,EAAiC,CACnC0D,QAAS,ICiBAC,EAAmBlD,aAnBR,SAACC,GACrB,MAAO,CACHkD,YAAalD,EAAMkD,gBAGA,SAAChD,GACxB,MAAO,CACHiD,OAAQ,SAACC,GACLlD,EDmBY,SAACkD,GACrB,MAAO,CACHhD,KAAM,SACNgD,UCtBaC,CAASD,KAEtBE,SAAU,SAACF,GACPlD,EDuBc,SAACkD,GACvB,MAAO,CACHhD,KAAM,WACNgD,UC1BaG,CAAWH,KAExBI,WAAY,SAACR,GACT9C,ED2BgB,SAAC8C,GACzB,MAAO,CACH5C,KAAM,cACN4C,WC9BaS,CAAaT,QAKFjD,ECxBmB,SAAC,GAAiD,IAAhDmD,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQG,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,WAE9C,IAA/BN,EAAYF,QAAQU,QACnBF,EAAW,CACP,CACIhE,GAAI,EAAGmE,SAAU,mGACjBR,QAAQ,EAAMS,SAAU,cAAeC,OAAQ,oBAC/CC,SAAU,CAACC,QAAS,UAAWC,KAAM,UAEzC,CACIxE,GAAI,EAAGmE,SAAU,6EACjBR,QAAQ,EAAMS,SAAU,oBAAqBC,OAAQ,oBACrDC,SAAU,CAACC,QAAS,SAAUC,KAAM,WAExC,CACIxE,GAAI,EAAGmE,SAAU,wKACjBR,QAAQ,EAAOS,SAAU,eAAgBC,OAAQ,YACjDC,SAAU,CAACC,QAAS,SAAUC,KAAM,WAExC,CACIxE,GAAI,EAAGmE,SAAU,iLACjBR,QAAQ,EAAOS,SAAU,iBAAkBC,OAAQ,mBACnDC,SAAU,CAACC,QAAS,QAASC,KAAM,aAW/C,OACI,8BACKd,EAAYF,QAAQtC,KAAI,SAAAuD,GAAC,OAAI,qBAAgBnG,UAAWC,IAAEmG,YAA7B,SAC1B,uBAAMpG,UAAWC,IAAEoG,aAAnB,UACI,8BACI,qBAAKlG,IAAKgG,EAAEN,SAAU7F,UAAWC,IAAEqG,WAGvC,uBAAMtG,UAAWC,IAAEsG,KAAnB,UACI,qBAAKvG,UAAWC,IAAE4D,KAAlB,SAAyBsC,EAAEL,WAC3B,8BAAMK,EAAEJ,YAGZ,uBAAM/F,UAAWC,IAAE+F,SAAnB,UACI,8BAAMG,EAAEH,SAASC,UACjB,8BAAME,EAAEH,SAASE,OAEjB,wBAAQlG,UAAWC,IAAEuG,aAAcpD,QAAS,kBArBzCqD,EAqB2DN,EAAEzE,QAAIyE,EAAEd,OApBvEG,EAASiB,GAAOpB,EAAOoB,IADpB,IAACA,GAqBH,SACKN,EAAEd,OAAS,SAAW,oBAhBCc,EAAEzE,YC9BzClB,GAAO,CAChBC,QAAS,WACTG,QAAS,WACTC,KAAM,QACNC,MAAO,SACPE,SAAU,YACVD,aAAc,gBAgCH2F,OA5Bf,SAAa3E,GAGT,OACI,cAAC,IAAD,UACI,sBAAK/B,UAAU,cAAf,UACI,cAACD,EAAD,IACA,cAACK,EAAD,IACA,qBAAKJ,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiE,KAAM,IAAK0C,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUrG,GAAIC,GAAKC,aAEzD,cAAC,IAAD,CAAOwD,KAAMzD,GAAKC,QACXmG,OAAQ,kBAAM,cAACvD,EAAD,OACrB,cAAC,IAAD,CAAOY,KAAMzD,GAAKI,QACXgG,OAAQ,kBAAM,cAACxC,EAAD,OACrB,cAAC,IAAD,CAAOH,KAAMzD,GAAKK,KAAM+F,OAAQ,kBAAM,cAACrD,EAAD,OACtC,cAAC,IAAD,CAAOU,KAAMzD,GAAKM,MAAO8F,OAAQ,kBAAM,cAACpD,EAAD,OACvC,cAAC,IAAD,CAAOS,KAAMzD,GAAKO,aAAc6F,OAAQ,kBAAM,cAACzB,EAAD,OAC9C,cAAC,IAAD,CAAOlB,KAAMzD,GAAKQ,SAAU4F,OAAQ,kBAAM,cAACnD,EAAD,kB,SC3C5DjC,GAA4B,GCO9BqF,GAAcC,aAAgB,CAC9B3E,YlBa0B,WAA+D,IAA9DD,EAA6D,uDAAtDV,EAAcuF,EAAwC,uCACxF,OAAQA,EAAOzE,MACX,KAAKhB,EACD,IAAM0F,EAAoB,CACtBtF,IAAI,IAAIuF,MAAOC,UACfvF,QAASoF,EAAOxE,SAChBX,UAAW,GAIf,OAAO,2BAAIM,GAAX,IAAkBT,MAAM,GAAD,mBAAMS,EAAMT,OAAZ,CAAmBuF,IAAUnF,YAAa,KAErE,KAAKN,EACD,OAAO,2BAAIW,GAAX,IAAkBL,YAAakF,EAAOtE,UAE1C,QACI,OAAOP,IkB5BfmC,WVuByB,WAA8D,IAA7DnC,EAA4D,uDAApDV,EAAcuF,EAAsC,uCACtF,OAAQA,EAAOzE,MACX,KAAKoB,EACD,IAAMgB,EAA0B,CAChChD,IAAK,IAAIuF,MAAOC,UAChBvF,QAASoF,EAAOxC,aAEhB,OAAO,2BAAIrC,GAAX,IAAkB4B,SAAS,GAAD,mBAAM5B,EAAM4B,UAAZ,CAAsBY,IAAaX,eAAgB,KAEjF,KAAKJ,EAED,OAAO,2BAAIzB,GAAX,IAAkB6B,eAAgBgD,EAAOrC,aAE7C,QACI,OAAOxC,IUpCfiF,QDR0B,WAAqD,IAApDjF,EAAmD,uDAA3CV,GAEnC,OAAOU,GCOPkD,YLS0B,WAAiE,IAAhElD,EAA+D,uDAAvDV,EAAcuF,EAAyC,uCAC1F,OAAQA,EAAOzE,MACX,IAAK,SACD,OAAO,2BAAIJ,GAAX,IAAkBgD,QAAShD,EAAMgD,QAAQtC,KAAI,SAAAuD,GAAC,OAAIA,EAAEzE,KAAOqF,EAAOzB,OAAhB,2BAA6Ba,GAA7B,IAAgCd,QAAQ,IAAQc,OAEtG,IAAK,WACD,OAAO,2BAAIjE,GAAX,IAAkBgD,QAAShD,EAAMgD,QAAQtC,KAAI,SAAAuD,GAAC,OAAIA,EAAEzE,KAAOqF,EAAOzB,OAAhB,2BAA6Ba,GAA7B,IAAgCd,QAAQ,IAASc,OAEvG,IAAK,cACD,OAAO,2BAAIjE,GAAX,IAAkBgD,QAAQ,YAAK6B,EAAO7B,WAE1C,QACI,OAAOhD,MKlBRkF,GAAQC,aAAYR,ICR3BS,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRI,SAASC,eAAe,SAQhCnI,M","file":"static/js/main.fd25db7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zCja\",\"item\":\"Navbar_item__24pIL\",\"active\":\"Navbar_active__3Lxyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"Friends_friendsItem__1z8Rr\",\"generalBlock\":\"Friends_generalBlock__1nnYb\",\"avatar\":\"Friends_avatar__19sMf\",\"info\":\"Friends_info__1B_iw\",\"name\":\"Friends_name__1H0jP\",\"buttonFollow\":\"Friends_buttonFollow__3Rq8Q\",\"location\":\"Friends_location__gZKax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentInfo\":\"ProfileInfo_contentInfo__2zTE7\",\"mainAvatar\":\"ProfileInfo_mainAvatar__2z29I\",\"cover\":\"ProfileInfo_cover__2z3gO\",\"describeProfile\":\"ProfileInfo_describeProfile__1_7Ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FZa8\",\"dialogsItem\":\"Dialogs_dialogsItem__1PTrf\",\"messages\":\"Dialogs_messages__XRR94\",\"button\":\"Dialogs_button__w9F2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1hg6I\",\"posts\":\"MyPost_posts__9OGtt\",\"button\":\"MyPost_button__6BLQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rw3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__-cKzQ\",\"active\":\"DialogItem_active__gIi1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1vXGy\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nexport function Header() {\r\n    return (\r\n\r\n            <header className={s.header}>\r\n                <img src='https://pbs.twimg.com/profile_banners/1341675636151132160/1608715543/1500x500' />\r\n            </header>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport function Navbar () {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.FIND_FRIENDS} activeClassName={s.active}>Friends</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div className={s.cover}>\r\n                <img\r\n                    src='https://catherineasquithgallery.com/uploads/posts/2021-02/1612889502_62-p-krasnii-kiberpank-fon-101.jpg'/>\r\n            </div>\r\n            <div className={s.contentInfo}>\r\n                <div className={s.mainAvatar}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                </div>\r\n                <div className={s.describeProfile}>\r\n                    My profile description\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\r\n\r\nexport type PostType = {\r\n    id: number;\r\n    message: string;\r\n    likeCount: number;\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>;\r\n    newPostText: string\r\n}\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n        posts: [\r\n            {id: 1, message: \"Hi, how are you?\", likeCount: 12},\r\n            {id: 2, message: \"It's my first post\", likeCount: 24},\r\n        ],\r\n        newPostText: ''\r\n    }\r\n\r\nexport const profileReducer = (state= initialState, action: ActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.postText,\r\n                likeCount: 0\r\n            }\r\n           // state.posts.push(newPost)\r\n\r\n            return {...state, posts: [...state.posts, newPost], newPostText: ''};\r\n\r\n        case UPDATE_NEW_POST:\r\n            return {...state, newPostText: action.newText};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addPostAC> | ReturnType<typeof onPostChangeAC>\r\n\r\nexport const addPostAC = (postText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postText: postText\r\n    } as const\r\n}\r\n\r\nexport const onPostChangeAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST,\r\n        newText: newText\r\n    } as const\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostTypeProps = {\r\n    message: string;\r\n    id: number;\r\n    likeCount: number;\r\n}\r\n\r\nexport function Post(props: PostTypeProps) {\r\n    return (\r\n        <div>\r\n            <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like: {props.likeCount} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {addPostAC, onPostChangeAC, ProfilePageType} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfilePageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\nconst mapStatePropsType = (state: AppStateType): MapStatePropsType =>  {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (message: string) => {\r\n            dispatch(addPostAC(message))\r\n        },\r\n        updateNewPost: (newText: string) => {\r\n            dispatch(onPostChangeAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStatePropsType, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from 'react';\r\nimport s from \"./MyPost.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../redux/profileReducer\";\r\n\r\n\r\ntype MyPostsProps = {\r\n    profilePage: ProfilePageType\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\n\r\nexport function MyPosts(props: MyPostsProps) {\r\n\r\n    const addPost = () => {\r\n        props.addPost(props.profilePage.newPostText)\r\n        props.updateNewPost('')\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewPost(e.currentTarget.value)\r\n    }\r\n\r\n    let postsElement =\r\n        props.profilePage.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts:</h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={props.profilePage.newPostText} onChange={onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button className={s.button} onClick={addPost}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\n\r\n\r\ntype ProfileProps = {\r\n    /*store: StoreType*/\r\n  /*  dispatch: (action: ActionsType) => void*/\r\n}\r\n\r\nexport function Profile(props: ProfileProps) {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n           News\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n          Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type MessageType = {\r\n    id: number;\r\n    message: string;\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>;\r\n    messages: Array<MessageType>;\r\n    newTextMessage: string\r\n}\r\n\r\nconst initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Terra\"},\r\n        {id: 2, name: \"Azumy\"},\r\n        {id: 3, name: \"Bria\"},\r\n        {id: 4, name: \"Keren\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi! How are yoy?\"},\r\n        {id: 2, message: \"Don't give up!\"},\r\n        {id: 3, message: \"Just do it\"},\r\n        {id: 4, message: \"Could you help me?\"}\r\n    ],\r\n    newTextMessage: '',\r\n}\r\n\r\nexport const dialogReducer = (state = initialState, action: ActionType):DialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n            id:  new Date().getTime(),\r\n            message: action.messageText\r\n        }\r\n            return {...state, messages: [...state.messages, newMessage], newTextMessage: ''}\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n           // state.newTextMessage = action.newMessage\r\n            return {...state, newTextMessage: action.newMessage}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addMessageAC> | ReturnType<typeof onMessageChangeAC>\r\n\r\nexport const addMessageAC = (messageText: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messageText: messageText\r\n    } as const\r\n}\r\n\r\nexport const onMessageChangeAC = (newMessage: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE,\r\n        newMessage: newMessage\r\n    } as const\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\n\r\n\r\ntype DialogItemProps = {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport function DialogItem(props: DialogItemProps) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype DialogMessageProps = {\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport function Message(props: DialogMessageProps) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {addMessageAC, DialogPageType, onMessageChangeAC} from \"../../redux/dialogsReducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n//здесь пример с использование Consumer\r\n/*export function DialogsContainer(props: DialogsContainerProps) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                const state = store.getState();\r\n\r\n                const addMessage = (messageText: string) => {\r\n                    store.dispatch(addMessageAC(messageText))\r\n                    store.dispatch(onMessageChangeAC(''))\r\n                }\r\n                const onMessageChange = (newMessage: string) => {\r\n                    store.dispatch(onMessageChangeAC(newMessage))\r\n                }\r\n\r\n                return <Dialogs dialogPage={state.dialogPage}\r\n                                addMessage={addMessage}\r\n                                onMessageChange={onMessageChange}/>\r\n            }}\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\ntype MapStatePropsType = {\r\n    dialogPage: DialogPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (messageText: string) => {\r\n            dispatch(addMessageAC(messageText))\r\n        },\r\n        onMessageChange: (newMessage: string) => {\r\n            dispatch(onMessageChangeAC(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../redux/dialogsReducer\";\r\n\r\n\r\ntype DialogsProps = {\r\n    dialogPage: DialogPageType;\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n}\r\n\r\nexport function Dialogs(props: DialogsProps) {\r\n\r\n\r\n    const addMessage = () => {\r\n        props.addMessage(props.dialogPage.newTextMessage)\r\n        props.onMessageChange('')\r\n    }\r\n    const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMessageChange(e.currentTarget.value)\r\n    }\r\n\r\n    let dialogElements =\r\n        props.dialogPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n    let messagesElements =\r\n        props.dialogPage.messages.map(msg => <Message key={msg.id} message={msg.message} id={msg.id}/>);\r\n\r\n    return (\r\n        <>\r\n            <textarea value={props.dialogPage.newTextMessage}\r\n                      onChange={onMessageChange}\r\n                      placeholder={'Enter your message'}/>\r\n\r\n            <div>\r\n                <button className={s.button} onClick={addMessage}>Add Message</button>\r\n            </div>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogsItem}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","export  type LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\nexport type FriendType = {\r\n    id: number\r\n    photoUrl: string\r\n    follow: boolean\r\n    nickname: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type initialStateType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    friends: []\r\n\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, follow: true} : f)};\r\n\r\n        case \"UNFOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, follow: false} : f)};\r\n\r\n        case \"SET-FRIENDS\":\r\n            return {...state, friends: [...action.friends]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setFriendsAC>\r\n\r\nexport const followAC = (userId: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const unfollowAC = (userId: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const setFriendsAC = (friends: Array<FriendType>) => {\r\n    return {\r\n        type: \"SET-FRIENDS\",\r\n        friends\r\n    } as const\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Friends} from \"./Friends\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {followAC, FriendType, initialStateType, setFriendsAC, unfollowAC} from \"../../redux/friendsReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStatePropsType = {\r\n    friendsPage: initialStateType\r\n}\r\ntype mapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFriends: (friends: Array<FriendType>) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        friendsPage: state.friendsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId: number) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setFriends: (friends: Array<FriendType>) => {\r\n            dispatch(setFriendsAC(friends))\r\n        }\r\n    }\r\n}\r\n\r\nexport const FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends)\r\n","import React from \"react\";\r\nimport {FriendType, initialStateType} from \"../../redux/friendsReducer\";\r\nimport s from './Friends.module.css'\r\n\r\ntype FriendsPropsType = {\r\n    friendsPage: initialStateType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFriends: (friends: Array<FriendType>) => void\r\n}\r\n\r\nexport const Friends: React.FC<FriendsPropsType> = ({friendsPage, follow, unfollow, setFriends}) => {\r\n\r\n    if(friendsPage.friends.length === 0) {\r\n        setFriends([\r\n            {\r\n                id: 1, photoUrl: 'https://s3.amazonaws.com/paxful/avatar/2019/05/60098620c27c08a70f55fdd3efb38faf.jpg?v=1593613146',\r\n                follow: true, nickname: 'Sophia Pang', status: \"Software Engineer\",\r\n                location: {country: 'Belarus', city: 'Minsk'}\r\n            },\r\n            {\r\n                id: 2, photoUrl: 'https://framacolibri.org/user_avatar/framacolibri.org/rigelk/200/942_1.png',\r\n                follow: true, nickname: 'Jonathon Thompson', status: \"Creative Director\",\r\n                location: {country: 'Poland', city: 'Warsaw'}\r\n            },\r\n            {\r\n                id: 3, photoUrl: 'https://sun6-23.userapi.com/s/v1/if1/59XuAdI4oWeF2pEhr5dIBJgGLezW7WvamrHqSTe2DzYRPihgcAg7n0Gso_5YGOZBqdTul46s.jpg?size=200x200&quality=96&crop=1080,178,704,704&ava=1',\r\n                follow: false, nickname: 'Brian Walton', status: \"Developer\",\r\n                location: {country: 'Canada', city: 'Ottawa'}\r\n            },\r\n            {\r\n                id: 4, photoUrl: 'https://sun1-97.userapi.com/s/v1/ig2/Hz89U9iY6tyh310FrZfSt7S27oiWPGU8vuqpKQbQO5BavVIcSbzkInTkZhvR-vQffYUabPIpE2KsMQxPZ1mmN0c8.jpg?size=200x0&quality=96&crop=2,2,495,495&ava=1',\r\n                follow: false, nickname: 'Olivia Steward', status: \"Fashion Designer\",\r\n                location: {country: 'Spain', city: 'Madrid'}\r\n            },\r\n        ])\r\n    }\r\n\r\n\r\n\r\n    const followHandler = (fId: number, followStatus: boolean) => {\r\n        followStatus ? unfollow(fId) : follow(fId)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {friendsPage.friends.map(f => <div key={f.id} className={s.friendsItem}>\r\n                <span className={s.generalBlock}>\r\n                    <div>\r\n                        <img src={f.photoUrl} className={s.avatar}/>\r\n                    </div>\r\n\r\n                    <span className={s.info}>\r\n                        <div className={s.name}>{f.nickname}</div>\r\n                        <div>{f.status}</div>\r\n                    </span>\r\n\r\n                    <span className={s.location}>\r\n                        <div>{f.location.country}</div>\r\n                        <div>{f.location.city}</div>\r\n\r\n                        <button className={s.buttonFollow} onClick={()=>followHandler(f.id, f.follow)}>\r\n                            {f.follow ? \"Follow\" : \"Unfollow\"}\r\n                        </button>\r\n\r\n                    </span>\r\n\r\n\r\n                </span>\r\n\r\n            </div>)}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport './App.css';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {FriendsContainer} from \"./components/Friends/FriendsContainer\";\n\n\ntype AppPropsType = {\n    /*store: StoreType*/\n}\nexport const PATH = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs',\n    NEWS: '/news',\n    MUSIC: '/music',\n    SETTINGS: '/settings',\n    FIND_FRIENDS: '/findFriends'\n}\n\n\nfunction App(props: AppPropsType) {\n   /* const state = props.store.getState();*/\n\n    return (\n        <HashRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='content'>\n                    <Switch>\n                        <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                        <Route path={PATH.PROFILE}\n                               render={() => <Profile />}/>\n                        <Route path={PATH.DIALOGS}\n                               render={() => <DialogsContainer />}/>\n                        <Route path={PATH.NEWS} render={() => <News/>}/>\n                        <Route path={PATH.MUSIC} render={() => <Music/>}/>\n                        <Route path={PATH.FIND_FRIENDS} render={() => <FriendsContainer/>}/>\n                        <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\n                    </Switch>\n                </div>\n\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","export type SidebarType = {}\r\n\r\nconst initialState: SidebarType = {}\r\n\r\nexport const sideBarReducer = (state = initialState, action: any): SidebarType => {\r\n\r\n    return state\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {dialogReducer} from \"./dialogsReducer\";\r\nimport {sideBarReducer} from \"./sideBarReducer\";\r\nimport {friendsReducer} from \"./friendsReducer\";\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sideBarReducer,\r\n    friendsPage: friendsReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer)\r\n\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/redux-store\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}