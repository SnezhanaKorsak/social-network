{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Friends/Pagination/Pagination.module.css","components/Friends/Friends.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPost.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Dialogs/DialogItem/DialogItem.module.css","common/Preloader/Preloader.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","api/Api.tsx","redux/friendsReducer.ts","assets/images/avatarnotfound.jpg","components/Friends/Friends.tsx","assets/images/rings.svg","common/Preloader/Preloader.tsx","components/Friends/FriendsContainer.tsx","components/Friends/Pagination/Pagination.tsx","redux/paginationReducer.ts","components/Friends/Pagination/PaginationContainer.tsx","components/Friends/FriendsPage.tsx","redux/profileReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","assets/images/noavatar.png","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","hoc/withAuthRedirect.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/dialogsReducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","App.tsx","redux/sideBarReducer.tsx","redux/redux-store.tsx","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","PATH","PROFILE","activeClassName","active","DIALOGS","NEWS","MUSIC","FIND_FRIENDS","SETTINGS","News","Music","Settings","instance","axios","create","withCredentials","baseURL","headers","UserAPI","currentPage","pageLimit","get","response","data","userId","post","delete","AuthAPI","initialState","friends","isFetching","followingInProgress","toggleIsFetching","type","followingProgress","Friends","friendsPage","followTC","unfollowTC","map","f","friendsItem","generalBlock","id","avatar","alt","src","photos","small","userPhoto","info","name","status","location","buttonFollow","onClick","fId","followed","disabled","some","Preloader","loading","loadingGif","FriendsAPIComponent","this","props","React","Component","FriendsContainer","connect","state","dispatch","resultCode","follow","unfollow","Pagination","totalRecords","fetchPageNumbers","handleClick","handleMoveLeft","handleMoveRight","totalPages","Math","ceil","pages","paginationBlock","totalCounter","selectedItem","totalBlocks","page","index","LEFT_PAGE","pageItem","aria-hidden","RIGHT_PAGE","selectedPage","totalCount","pageNeighbours","setTotalCount","range","from","step","i","push","PaginationAPIComponent","totalNumbers","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","getUsersTC","previousPage","nextPage","PaginationContainer","pagination","items","FriendsPage","ADD_POST","UPDATE_NEW_POST","posts","message","likeCount","newPostText","profile","Post","MyPostsContainer","profilePage","addPost","postText","updateNewPost","newText","onPostChangeAC","postsElement","p","postBlock","value","onChange","e","currentTarget","button","ProfileInfo","cover","contentInfo","mainAvatar","describeProfile","basicBlock","basicItem","order","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","vk","instagram","github","Profile","content","mapStateToProps","isAuth","auth","withAuthRedirect","restProps","LOGIN","ProfileContainer","match","params","getUserProfileTC","compose","withRouter","Header","login","header","loginBlock","email","HeaderContainer","getUserAPIDataTC","setAuthUserData","Login","ADD_MESSAGE","UPDATE_NEW_MESSAGE","dialogs","messages","newTextMessage","DialogItem","path","dialog","Message","dialogPage","addMessage","messageText","addMessageAC","onMessageChange","newMessage","onMessageChangeAC","dialogElements","d","messagesElements","msg","placeholder","dialogsItem","App","exact","render","DialogsContainer","rootReducer","combineReducers","action","newPost","Date","getTime","sidebar","filter","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2586be39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentInfo\":\"ProfileInfo_contentInfo__2zTE7\",\"mainAvatar\":\"ProfileInfo_mainAvatar__2z29I\",\"cover\":\"ProfileInfo_cover__2z3gO\",\"describeProfile\":\"ProfileInfo_describeProfile__1_7Ui\",\"basicBlock\":\"ProfileInfo_basicBlock__23AOr\",\"basicItem\":\"ProfileInfo_basicItem__3-wdM\",\"order\":\"ProfileInfo_order__1I44p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBlock\":\"Pagination_paginationBlock__2ptE-\",\"totalCounter\":\"Pagination_totalCounter__2O0No\",\"currentPage\":\"Pagination_currentPage__pGyB_\",\"totalBlocks\":\"Pagination_totalBlocks__F-5JV\",\"pageItem\":\"Pagination_pageItem__CEBnw\",\"selectedPage\":\"Pagination_selectedPage__3jagA\",\"selectedItem\":\"Pagination_selectedItem__2aRyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"Friends_friendsItem__1z8Rr\",\"generalBlock\":\"Friends_generalBlock__1nnYb\",\"avatar\":\"Friends_avatar__19sMf\",\"info\":\"Friends_info__1B_iw\",\"name\":\"Friends_name__1H0jP\",\"buttonFollow\":\"Friends_buttonFollow__3Rq8Q\",\"location\":\"Friends_location__gZKax\",\"selectedPage\":\"Friends_selectedPage__2k4r0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FZa8\",\"dialogsItem\":\"Dialogs_dialogsItem__1PTrf\",\"messages\":\"Dialogs_messages__XRR94\",\"button\":\"Dialogs_button__w9F2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1hg6I\",\"posts\":\"MyPost_posts__9OGtt\",\"button\":\"MyPost_button__6BLQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rw3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1vXGy\",\"loginBlock\":\"Header_loginBlock__8AO3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__-cKzQ\",\"active\":\"DialogItem_active__gIi1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__2wZBc\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport function Navbar () {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.PROFILE + '2'} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.FIND_FRIENDS} activeClassName={s.active}>Friends</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n           News\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n          Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        'API-KEY': 'a00ef78b-3360-4cfb-a08a-5146df137c1f'\r\n    }\r\n})\r\n\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageLimit = 4) {\r\n        return instance.get(`/users?page=${currentPage}&count=${pageLimit}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId = 2) {\r\n        return instance.post(`/follow/${userId}`, {}).then(response => response.data)\r\n    },\r\n    unfollowUser(userId = 2) {\r\n        return instance.delete(`/follow/${userId}`).then(response => response.data)\r\n    },\r\n    getUsersProfile(userId: string) {\r\n        return instance.get(`/profile/` + userId).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const AuthAPI = {\r\n    me () {\r\n        return instance.get('/auth/me').then(response => response.data)\r\n    }\r\n}","import {UserAPI} from \"../api/Api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport  type LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type FriendType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type initialStateType = {\r\n    friends: Array<FriendType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    friends: [],\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, followed: true} : f)};\r\n\r\n        case \"UNFOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, followed: false} : f)};\r\n\r\n        case \"SET-FRIENDS\":\r\n            return {...state, friends: action.friends}\r\n\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case \"FOLLOWING-PROGRESS\":\r\n            return action.isFetching\r\n                ? {...state, followingInProgress: [...state.followingInProgress, action.userId]}\r\n                : {...state, followingInProgress: state.followingInProgress.filter(id => id !== action.userId)}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setFriends>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof followingProgress>\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\nexport const setFriends = (friends: Array<FriendType>) => {\r\n    return {\r\n        type: \"SET-FRIENDS\",\r\n        friends\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const followingProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: \"FOLLOWING-PROGRESS\",\r\n        isFetching, userId\r\n    } as const\r\n}\r\n\r\nexport const followTC = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(followingProgress(true, userId))\r\n        UserAPI.followUser(userId).then(data => {\r\n            if (data.resultCode === 0) dispatch(follow(userId))\r\n            dispatch(followingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\nexport const unfollowTC = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(followingProgress(true, userId))\r\n        UserAPI.unfollowUser(userId).then(data => {\r\n            if (data.resultCode === 0) dispatch(unfollow(userId))\r\n            dispatch(followingProgress(false, userId))\r\n        })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/avatarnotfound.86317f4b.jpg\";","import React from \"react\";\r\nimport s from \"./Friends.module.css\";\r\nimport userPhoto from \"../../assets/images/avatarnotfound.jpg\";\r\nimport {initialStateType} from \"../../redux/friendsReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\ntype FriendsPropsType = {\r\n    friendsPage: initialStateType\r\n    followingInProgress: Array<number>\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n\r\nexport const Friends = (\r\n    {\r\n        friendsPage,\r\n        followingInProgress,\r\n        followTC,\r\n        unfollowTC,\r\n    }: FriendsPropsType) => {\r\n\r\n    const followHandler = (fId: number, followStatus: boolean) => {\r\n        followStatus\r\n            ? unfollowTC(fId)\r\n            : followTC(fId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*<div>\r\n                    {pages.map(p => {\r\n                            return <span className={`${this.props.currentPage === p && s.selectedPage}`}\r\n                            onClick={()=>this.currentPageHandler(p)}>\r\n                                {p}</span>\r\n                        }\r\n                    )}\r\n                </div>\r\n*/}\r\n            {friendsPage.friends.map(f => <div key={f.id} className={s.friendsItem}>\r\n                <span className={s.generalBlock}>\r\n                    <div>\r\n                        <NavLink to={PATH.PROFILE + f.id}>\r\n                            <img className={s.avatar} alt={'userAvatar'}\r\n                                 src={f.photos.small != null ? f.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <span className={s.info}>\r\n                        <div className={s.name}>{f.name}</div>\r\n                        <div>{f.status}</div>\r\n                    </span>\r\n\r\n                    <span className={s.location}>\r\n                        <div>{'f.location.country'}</div>\r\n                        <div>{'f.location.city'}</div>\r\n\r\n                        <button className={s.buttonFollow}\r\n                                onClick={() => {\r\n                                    followHandler(f.id, f.followed)\r\n                                }}\r\n                                disabled={followingInProgress.some(id => id === f.id)}>\r\n                            {f.followed ? \"Follow\" : \"Unfollow\"}\r\n                        </button>\r\n\r\n                    </span>\r\n\r\n                </span>\r\n\r\n            </div>)}\r\n        </>\r\n    )\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rings.dbfd1db7.svg\";","import React from \"react\";\r\nimport s from './Preloader.module.css'\r\nimport loadingGif from \"../../assets/images/rings.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img className={s.loading} src={loadingGif} alt='loading'/>\r\n    </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {followTC, initialStateType, unfollowTC} from \"../../redux/friendsReducer\";\r\nimport React from \"react\";\r\nimport {Friends} from \"./Friends\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass FriendsAPIComponent extends React.Component<FriendsAPIComponentPropsType> {\r\n\r\n    render(): React.ReactNode {\r\n        return <div>\r\n            {this.props.isFetching ? <Preloader/>\r\n                : <Friends friendsPage={this.props.friendsPage}\r\n                           followingInProgress = {this.props.followingInProgress}\r\n                           followTC={this.props.followTC}\r\n                           unfollowTC={this.props.unfollowTC}\r\n\r\n                />}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport type FriendsAPIComponentPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nexport type mapStatePropsType = {\r\n    friendsPage: initialStateType\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type mapDispatchPropsType = {\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        friendsPage: state.friendsPage,\r\n        isFetching: state.friendsPage.isFetching,\r\n        followingInProgress: state.friendsPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\nexport const FriendsContainer = connect(mapStateToProps,\r\n    {followTC, unfollowTC})(FriendsAPIComponent)\r\n","import React from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\nimport {LEFT_PAGE, RIGHT_PAGE} from \"./PaginationContainer\";\r\n\r\ntype PaginationPropsType = {\r\n    pageLimit: number\r\n    totalRecords: number\r\n    currentPage: number\r\n    fetchPageNumbers: () => (string | number)[]\r\n    handleClick: (page: number | string) => void\r\n    handleMoveLeft: () => void\r\n    handleMoveRight: () => void\r\n}\r\n\r\nexport const Pagination: React.FC<PaginationPropsType> = (\r\n    {\r\n        totalRecords,\r\n        pageLimit,\r\n        fetchPageNumbers,\r\n        currentPage,\r\n        handleClick,\r\n        handleMoveLeft,\r\n        handleMoveRight,\r\n\r\n    }) => {\r\n\r\n    const totalPages = Math.ceil(totalRecords / pageLimit);\r\n    const pages = fetchPageNumbers()\r\n    if (!totalRecords || totalPages === 1) return null\r\n\r\n    return (\r\n            <nav className={s.paginationBlock}>\r\n                <div className={s.totalCounter}>\r\n                    <span className={s.selectedItem}>{totalRecords}</span> Users\r\n                </div>\r\n\r\n                <div className={s.currentPage}>\r\n                    Page <span className={s.selectedItem}>{currentPage}</span>/{totalPages}\r\n                </div>\r\n\r\n                <ul className={s.totalBlocks}>\r\n                    {pages.map((page, index) => {\r\n                        if (page === LEFT_PAGE) return (\r\n                            <li key={index} className={s.pageItem}>\r\n                                <span aria-hidden=\"true\"\r\n                                      onClick={handleMoveLeft}>&laquo;</span>\r\n                            </li>\r\n                        );\r\n\r\n                        if (page === RIGHT_PAGE) return (\r\n                            <li key={index} className={s.pageItem}>\r\n                                <span aria-hidden=\"true\"\r\n                                      onClick={handleMoveRight}>&raquo;</span>\r\n                            </li>\r\n                        );\r\n\r\n                        return (\r\n                            <>\r\n                                <li key={index}\r\n                                    className={`${s.pageItem} ${currentPage === page && s.selectedPage}`}\r\n                                    onClick={() => handleClick(page)}>\r\n                                    {page}\r\n                                </li>\r\n\r\n                            </>\r\n                        )\r\n\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n","import {setFriends, toggleIsFetching} from \"./friendsReducer\";\r\nimport {UserAPI} from \"../api/Api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type initialStateType = {\r\n    pageLimit: number\r\n    totalCount: number\r\n    pageNeighbours: number\r\n    currentPage: number\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    totalCount: 0,\r\n    pageLimit: 4,\r\n    pageNeighbours: 1,\r\n    currentPage: 1,\r\n}\r\n\r\nexport const paginationReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.page}\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setFriends>\r\n    | ReturnType<typeof toggleIsFetching>\r\n\r\n\r\nexport const setTotalCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-COUNT\",\r\n        totalCount\r\n    } as const\r\n}\r\nexport const setCurrentPage = (page: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        page\r\n    } as const\r\n}\r\n\r\nexport const getUsersTC = (currentPage: number, pageLimit: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n\r\n        UserAPI.getUsers(currentPage, pageLimit).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setFriends(data.items));\r\n            dispatch(setTotalCount(data.totalCount))\r\n        })\r\n    }\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Pagination} from \"./Pagination\";\r\nimport {getUsersTC,  setTotalCount} from \"../../../redux/paginationReducer\";\r\n\r\n\r\nexport const LEFT_PAGE = 'LEFT';\r\nexport const RIGHT_PAGE = 'RIGHT';\r\n\r\nconst range = (from: number | string, to: number, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        typeof i === \"number\" ? i += step : i = 0;\r\n    }\r\n\r\n    return range;\r\n}\r\n\r\n//https://www.digitalocean.com/community/tutorials/how-to-build-custom-pagination-with-react-ru\r\n\r\nclass PaginationAPIComponent extends React.Component<PaginationAPIComponentPropsType> {\r\n    componentDidMount(): void {\r\n        /*this.props.toggleIsFetching(true)\r\n        getUsers(this.props.currentPage, this.props.pageLimit).then(data => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setFriends(data.items);\r\n                this.props.setTotalCount(data.totalCount)\r\n            })*/\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageLimit)\r\n    }\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = Math.ceil(this.props.totalRecords / this.props.pageLimit);\r\n        const currentPage = this.props.currentPage;\r\n        const pageNeighbours = this.props.pageNeighbours;\r\n\r\n        const totalNumbers = (pageNeighbours * 2) + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            const startPage = Math.max(2, currentPage - pageNeighbours);\r\n            const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n            let pages = range(startPage, endPage);\r\n            const hasLeftSpill = startPage > 2;\r\n            const hasRightSpill = (totalPages - endPage) > 1;\r\n            const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n            switch (true) {\r\n                // handle: (1) < {5 6} [7] {8 9} (10)\r\n                case (hasLeftSpill && !hasRightSpill): {\r\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\r\n                    pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) {2 3} [4] {5 6} > (10)\r\n                case (!hasLeftSpill && hasRightSpill): {\r\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\r\n                    pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) < {4 5} [6] {7 8} > (10)\r\n                case (hasLeftSpill && hasRightSpill):\r\n                default: {\r\n                    pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    }\r\n\r\n    handleClick = (page: number | string) => {\r\n\r\n        if (typeof page === \"number\") {\r\n            this.props.getUsersTC(page, this.props.pageLimit)\r\n        }\r\n    }\r\n    handleMoveLeft = () => {\r\n        const previousPage = this.props.currentPage - (this.props.pageNeighbours * 2) - 1\r\n        this.props.getUsersTC(previousPage, this.props.pageLimit)\r\n    }\r\n    handleMoveRight = () => {\r\n        const nextPage = this.props.currentPage + (this.props.pageNeighbours * 2) + 1\r\n        this.props.getUsersTC(nextPage, this.props.pageLimit)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Pagination pageLimit={this.props.pageLimit}\r\n                           totalRecords={this.props.totalRecords}\r\n                           currentPage={this.props.currentPage}\r\n                           fetchPageNumbers={this.fetchPageNumbers}\r\n                           handleClick={this.handleClick}\r\n                           handleMoveLeft={this.handleMoveLeft}\r\n                           handleMoveRight={this.handleMoveRight}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nexport type PaginationAPIComponentPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nexport type mapStatePropsType = {\r\n    pageLimit: number\r\n    totalRecords: number\r\n    pageNeighbours: number\r\n    currentPage: number\r\n\r\n}\r\nexport type mapDispatchPropsType = {\r\n    setTotalCount: (totalCount: number) => void\r\n    getUsersTC: (currentPage: number, pageLimit: number) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        pageLimit: state.pagination.pageLimit,\r\n        totalRecords: state.pagination.totalCount,\r\n        pageNeighbours: state.pagination.pageNeighbours,\r\n        currentPage: state.pagination.currentPage,\r\n\r\n    }\r\n}\r\n/*const mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        setFriends: (friends: Array<FriendType>) => {\r\n            dispatch(setFriendsAC(friends))\r\n        },\r\n        setCurrentPage: (page: number) => {\r\n            dispatch(setCurrentPageAC(page))\r\n        },\r\n        setTotalCount: (totalCount: number) => {\r\n            dispatch(setTotalCountAC(totalCount))\r\n        },\r\n        isFetchingHandler: (isFetching: boolean) => {\r\n            dispatch(isFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport const PaginationContainer = connect(mapStateToProps, {\r\n    setTotalCount,\r\n    getUsersTC: getUsersTC,\r\n})(PaginationAPIComponent)\r\n","import React from \"react\";\r\nimport {FriendsContainer} from \"./FriendsContainer\";\r\nimport {PaginationContainer} from \"./Pagination/PaginationContainer\";\r\n\r\nexport const FriendsPage = () => {\r\n    return (\r\n        <>\r\n            <PaginationContainer/>\r\n            <FriendsContainer/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {UserAPI} from \"../api/Api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE';\r\n\r\nexport type PostType = {\r\n    id: number;\r\n    message: string;\r\n    likeCount: number;\r\n}\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: string | null\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: null,\r\n    github: string\r\n    mainLink: null\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    \"contacts\": ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosType\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likeCount: 12},\r\n        {id: 2, message: \"It's my first post\", likeCount: 24},\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.postText,\r\n                likeCount: 0\r\n            }\r\n\r\n            return {...state, posts: [...state.posts, newPost], newPostText: ''};\r\n\r\n        case UPDATE_NEW_POST:\r\n            return {...state, newPostText: action.newText};\r\n\r\n        case \"SET-USERS-PROFILE\":\r\n            return {...state, profile: action.profile}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof onPostChangeAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n\r\nexport const addPostAC = (postText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postText\r\n    } as const\r\n}\r\n\r\nexport const onPostChangeAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST,\r\n        newText\r\n    } as const\r\n}\r\nexport const setUsersProfile = (profile: ProfileType | null) => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n       profile\r\n    } as const\r\n}\r\n\r\nexport const getUserProfileTC = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UserAPI.getUsersProfile(userId).then(data => {\r\n            dispatch(setUsersProfile(data));\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostTypeProps = {\r\n    message: string;\r\n    id: number;\r\n    likeCount: number;\r\n}\r\n\r\nexport function Post(props: PostTypeProps) {\r\n    return (\r\n        <div>\r\n            <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like: {props.likeCount} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {addPostAC, onPostChangeAC, ProfilePageType} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfilePageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\nconst mapStatePropsType = (state: AppStateType): MapStatePropsType =>  {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (message: string) => {\r\n            dispatch(addPostAC(message))\r\n        },\r\n        updateNewPost: (newText: string) => {\r\n            dispatch(onPostChangeAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStatePropsType, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from 'react';\r\nimport s from \"./MyPost.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../redux/profileReducer\";\r\n\r\n\r\ntype MyPostsProps = {\r\n    profilePage: ProfilePageType\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\n\r\nexport function MyPosts(props: MyPostsProps) {\r\n\r\n    const addPost = () => {\r\n        props.addPost(props.profilePage.newPostText)\r\n        props.updateNewPost('')\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewPost(e.currentTarget.value)\r\n    }\r\n\r\n    let postsElement =\r\n        props.profilePage.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts:</h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={props.profilePage.newPostText} onChange={onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button className={s.button} onClick={addPost}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/noavatar.8233c8b6.png\";","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/noavatar.png\";\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.cover}>\r\n                <img\r\n                    src='https://catherineasquithgallery.com/uploads/posts/2021-02/1612889502_62-p-krasnii-kiberpank-fon-101.jpg'\r\n                    alt='cover'/>\r\n            </div>\r\n            <div className={s.contentInfo}>\r\n                <div className={s.mainAvatar}>\r\n                    <img src={profile.photos.small ? profile.photos.small : userPhoto}\r\n                         alt='avatar'/>\r\n                </div>\r\n                <div className={s.describeProfile}>\r\n                    <h4>Basic Information</h4>\r\n                    <hr/>\r\n                    <div className={s.basicBlock}>\r\n                        <div className={`${s.basicItem} ${s.order}`}>\r\n                            Name:<br/>\r\n                            About me:<br/>\r\n                            Profession:<br/>\r\n                            Status:<br/>\r\n                        </div>\r\n                        <div className={s.basicItem}>\r\n                            {profile.fullName ? profile.fullName : 'no information'}<br/>\r\n                            {profile.aboutMe ? profile.aboutMe : 'no information'}<br/>\r\n                            {profile.lookingForAJob ? \"I'm locking for a job\"\r\n                                : profile.lookingForAJobDescription ? profile.lookingForAJobDescription\r\n                                    : 'no information'}<br/>\r\n                            {profile.lookingForAJobDescription ? profile.lookingForAJobDescription\r\n                                : 'no information'}<br/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h4>Contact Information</h4>\r\n                    <hr/>\r\n                    <div className={s.basicBlock}>\r\n                        <div className={`${s.basicItem} ${s.order}`}>\r\n                            Facebook:<br/>\r\n                            VK:<br/>\r\n                            Instagram:<br/>\r\n                            GitHub:<br/>\r\n                        </div>\r\n                        <div className={s.basicItem}>\r\n                            {profile.contacts.facebook ? profile.contacts.facebook : 'no information'}<br/>\r\n                            {profile.contacts.vk ? profile.contacts.vk : 'no information'}<br/>\r\n                            {profile.contacts.instagram ? profile.contacts.instagram : 'no information'}<br/>\r\n                            {profile.contacts.github ? profile.contacts.github : 'no information'}<br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from \"../../redux/profileReducer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n   profile: ProfileType | null\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({profile}) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../App\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getUserProfileTC, ProfileType} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Profile profile={this.props.profile}/>\r\n        );\r\n    }\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: ProfileType | null\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUserProfileTC: (userId: string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n    }\r\n\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfileTC}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({isAuth, login}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://pbs.twimg.com/profile_banners/1341675636151132160/1608715543/1500x500' alt='label'/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? login\r\n                    : <NavLink to={PATH.LOGIN}>LOGIN</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AuthAPI} from \"../api/Api\";\r\n\r\nexport type initialStateType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {...state, ...action.data, isAuth: true}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setAuthUserData>\r\n\r\n\r\nexport const setAuthUserData = (userId: string, email: string, login: string) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        data: {userId, email, login}\r\n    } as const\r\n}\r\nexport const getUserAPIDataTC = () => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        AuthAPI.me().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport { getUserAPIDataTC } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        this.props.getUserAPIDataTC()\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login}/>\r\n    }\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    id: string | null\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUserAPIDataTC: () => void\r\n}\r\ntype PropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        id: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserAPIDataTC})(HeaderContainer)","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return <div>\r\n        LOGIN\r\n    </div>\r\n}","\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type MessageType = {\r\n    id: number;\r\n    message: string;\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>;\r\n    messages: Array<MessageType>;\r\n    newTextMessage: string\r\n}\r\n\r\nconst initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Terra\"},\r\n        {id: 2, name: \"Azumy\"},\r\n        {id: 3, name: \"Bria\"},\r\n        {id: 4, name: \"Keren\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi! How are yoy?\"},\r\n        {id: 2, message: \"Don't give up!\"},\r\n        {id: 3, message: \"Just do it\"},\r\n        {id: 4, message: \"Could you help me?\"}\r\n    ],\r\n    newTextMessage: '',\r\n}\r\n\r\nexport const dialogReducer = (state = initialState, action: ActionType):DialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n            id:  new Date().getTime(),\r\n            message: action.messageText\r\n        }\r\n            return {...state, messages: [...state.messages, newMessage], newTextMessage: ''}\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n           // state.newTextMessage = action.newMessage\r\n            return {...state, newTextMessage: action.newMessage}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addMessageAC> | ReturnType<typeof onMessageChangeAC>\r\n\r\nexport const addMessageAC = (messageText: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messageText: messageText\r\n    } as const\r\n}\r\n\r\nexport const onMessageChangeAC = (newMessage: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE,\r\n        newMessage: newMessage\r\n    } as const\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\n\r\n\r\ntype DialogItemProps = {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport function DialogItem(props: DialogItemProps) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype DialogMessageProps = {\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport function Message(props: DialogMessageProps) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {addMessageAC, DialogPageType, onMessageChangeAC} from \"../../redux/dialogsReducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\n\r\n\r\n//здесь пример с использование Consumer\r\n/*export function DialogsContainer(props: DialogsContainerProps) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                const state = store.getState();\r\n\r\n                const addMessage = (messageText: string) => {\r\n                    store.dispatch(addMessageAC(messageText))\r\n                    store.dispatch(onMessageChangeAC(''))\r\n                }\r\n                const onMessageChange = (newMessage: string) => {\r\n                    store.dispatch(onMessageChangeAC(newMessage))\r\n                }\r\n\r\n                return <Dialogs dialogPage={state.dialogPage}\r\n                                addMessage={addMessage}\r\n                                onMessageChange={onMessageChange}/>\r\n            }}\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\ntype MapStatePropsType = {\r\n    dialogPage: DialogPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (messageText: string) => {\r\n            dispatch(addMessageAC(messageText))\r\n        },\r\n        onMessageChange: (newMessage: string) => {\r\n            dispatch(onMessageChangeAC(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport {DialogPageType} from \"../../redux/dialogsReducer\";\r\n\r\n\r\n\r\ntype DialogsProps = {\r\n    dialogPage: DialogPageType;\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Dialogs(props: DialogsProps) {\r\n\r\n    const addMessage = () => {\r\n        props.addMessage(props.dialogPage.newTextMessage)\r\n        props.onMessageChange('')\r\n    }\r\n    const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMessageChange(e.currentTarget.value)\r\n    }\r\n\r\n    let dialogElements =\r\n        props.dialogPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n    let messagesElements =\r\n        props.dialogPage.messages.map(msg => <Message key={msg.id} message={msg.message} id={msg.id}/>);\r\n\r\n    return (\r\n        <>\r\n            <textarea value={props.dialogPage.newTextMessage}\r\n                      onChange={onMessageChange}\r\n                      placeholder={'Enter your message'}/>\r\n\r\n            <div>\r\n                <button className={s.button} onClick={addMessage}>Add Message</button>\r\n            </div>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogsItem}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport './App.css';\n\nimport {FriendsPage} from \"./components/Friends/FriendsPage\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport {Login} from \"./components/Login/Login\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\n\ntype AppPropsType = {\n    /*store: StoreType*/\n}\nexport const PATH = {\n    PROFILE: '/profile/',\n    DIALOGS: '/dialogs/',\n    NEWS: '/news/',\n    MUSIC: '/music/',\n    SETTINGS: '/settings/',\n    FIND_FRIENDS: '/findFriends/',\n    LOGIN: '/login/',\n}\n\n\nfunction App(props: AppPropsType) {\n    /* const state = props.store.getState();*/\n\n    return (\n        <HashRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='content'>\n                    <Switch>\n                        <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                        <Route path={PATH.PROFILE + ':userId'}\n                               render={() => <ProfileContainer/>}/>\n                        <Route path={PATH.DIALOGS}\n                               render={() => <DialogsContainer/>}/>\n                        <Route path={PATH.NEWS} render={() => <News/>}/>\n                        <Route path={PATH.MUSIC} render={() => <Music/>}/>\n                        <Route path={PATH.FIND_FRIENDS} render={() => <FriendsPage/>}/>\n                        <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\n                        <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                    </Switch>\n                </div>\n\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","export type SidebarType = {}\r\n\r\nconst initialState: SidebarType = {}\r\n\r\nexport const sideBarReducer = (state = initialState, action: any): SidebarType => {\r\n\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {dialogReducer} from \"./dialogsReducer\";\r\nimport {sideBarReducer} from \"./sideBarReducer\";\r\nimport {friendsReducer} from \"./friendsReducer\";\r\nimport {paginationReducer} from \"./paginationReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sideBarReducer,\r\n    friendsPage: friendsReducer,\r\n    pagination: paginationReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/redux-store\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zCja\",\"item\":\"Navbar_item__24pIL\",\"active\":\"Navbar_active__3Lxyu\"};"],"sourceRoot":""}