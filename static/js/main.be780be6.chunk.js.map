{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Friends/Pagination/Pagination.module.css","components/Friends/Friends.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPost.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","common/Preloader/Preloader.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogsReducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","api/Api.tsx","redux/friendsReducer.ts","assets/images/avatarnotfound.jpg","components/Friends/Friends.tsx","assets/images/rings.svg","common/Preloader/Preloader.tsx","components/Friends/FriendsContainer.tsx","components/Friends/Pagination/Pagination.tsx","redux/paginationReducer.ts","components/Friends/Pagination/PaginationContainer.tsx","components/Friends/FriendsPage.tsx","redux/profileReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","assets/images/noavatar.png","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/sideBarReducer.tsx","redux/redux-store.tsx","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","PATH","PROFILE","activeClassName","active","DIALOGS","NEWS","MUSIC","FIND_FRIENDS","SETTINGS","News","Music","Settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialState","dialogs","id","name","messages","message","newTextMessage","DialogItem","props","path","dialog","Message","DialogsContainer","connect","state","dialogPage","isAuth","auth","dispatch","addMessage","messageText","type","addMessageAC","onMessageChange","newMessage","onMessageChangeAC","dialogElements","map","d","messagesElements","msg","value","onChange","e","currentTarget","placeholder","button","onClick","dialogsItem","LOGIN","instance","axios","create","withCredentials","baseURL","headers","UserAPI","currentPage","pageLimit","get","response","data","userId","post","delete","AuthAPI","friends","isFetching","followingInProgress","toggleIsFetching","followingProgress","Friends","friendsPage","followTC","unfollowTC","f","friendsItem","generalBlock","avatar","alt","src","photos","small","userPhoto","info","status","location","buttonFollow","fId","followed","disabled","some","Preloader","loading","loadingGif","FriendsAPIComponent","this","React","Component","FriendsContainer","resultCode","follow","unfollow","Pagination","totalRecords","fetchPageNumbers","handleClick","handleMoveLeft","handleMoveRight","totalPages","Math","ceil","pages","paginationBlock","totalCounter","selectedItem","totalBlocks","page","index","LEFT_PAGE","pageItem","aria-hidden","RIGHT_PAGE","selectedPage","totalCount","pageNeighbours","setTotalCount","range","from","step","i","push","PaginationAPIComponent","totalNumbers","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","getUsersTC","previousPage","nextPage","PaginationContainer","pagination","items","FriendsPage","ADD_POST","UPDATE_NEW_POST","posts","likeCount","newPostText","profile","Post","MyPostsContainer","profilePage","addPost","postText","updateNewPost","newText","onPostChangeAC","postsElement","p","postBlock","ProfileInfo","cover","contentInfo","mainAvatar","describeProfile","basicBlock","basicItem","order","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","vk","instagram","github","Profile","content","ProfileContainer","match","params","getUserProfileTC","WithUrlDataContainerComponent","withRouter","Header","login","header","loginBlock","email","HeaderContainer","getUserAPIDataTC","setAuthUserData","Login","App","exact","render","rootReducer","combineReducers","action","newPost","Date","getTime","sidebar","filter","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be780be6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentInfo\":\"ProfileInfo_contentInfo__2zTE7\",\"mainAvatar\":\"ProfileInfo_mainAvatar__2z29I\",\"cover\":\"ProfileInfo_cover__2z3gO\",\"describeProfile\":\"ProfileInfo_describeProfile__1_7Ui\",\"basicBlock\":\"ProfileInfo_basicBlock__23AOr\",\"basicItem\":\"ProfileInfo_basicItem__3-wdM\",\"order\":\"ProfileInfo_order__1I44p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBlock\":\"Pagination_paginationBlock__2ptE-\",\"totalCounter\":\"Pagination_totalCounter__2O0No\",\"currentPage\":\"Pagination_currentPage__pGyB_\",\"totalBlocks\":\"Pagination_totalBlocks__F-5JV\",\"pageItem\":\"Pagination_pageItem__CEBnw\",\"selectedPage\":\"Pagination_selectedPage__3jagA\",\"selectedItem\":\"Pagination_selectedItem__2aRyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"Friends_friendsItem__1z8Rr\",\"generalBlock\":\"Friends_generalBlock__1nnYb\",\"avatar\":\"Friends_avatar__19sMf\",\"info\":\"Friends_info__1B_iw\",\"name\":\"Friends_name__1H0jP\",\"buttonFollow\":\"Friends_buttonFollow__3Rq8Q\",\"location\":\"Friends_location__gZKax\",\"selectedPage\":\"Friends_selectedPage__2k4r0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FZa8\",\"dialogsItem\":\"Dialogs_dialogsItem__1PTrf\",\"messages\":\"Dialogs_messages__XRR94\",\"button\":\"Dialogs_button__w9F2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1hg6I\",\"posts\":\"MyPost_posts__9OGtt\",\"button\":\"MyPost_button__6BLQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__-cKzQ\",\"active\":\"DialogItem_active__gIi1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rw3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1vXGy\",\"loginBlock\":\"Header_loginBlock__8AO3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__2wZBc\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport function Navbar () {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.PROFILE + '2'} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.FIND_FRIENDS} activeClassName={s.active}>Friends</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n           News\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n          Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type MessageType = {\r\n    id: number;\r\n    message: string;\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>;\r\n    messages: Array<MessageType>;\r\n    newTextMessage: string\r\n}\r\n\r\nconst initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Terra\"},\r\n        {id: 2, name: \"Azumy\"},\r\n        {id: 3, name: \"Bria\"},\r\n        {id: 4, name: \"Keren\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi! How are yoy?\"},\r\n        {id: 2, message: \"Don't give up!\"},\r\n        {id: 3, message: \"Just do it\"},\r\n        {id: 4, message: \"Could you help me?\"}\r\n    ],\r\n    newTextMessage: '',\r\n}\r\n\r\nexport const dialogReducer = (state = initialState, action: ActionType):DialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n            id:  new Date().getTime(),\r\n            message: action.messageText\r\n        }\r\n            return {...state, messages: [...state.messages, newMessage], newTextMessage: ''}\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n           // state.newTextMessage = action.newMessage\r\n            return {...state, newTextMessage: action.newMessage}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addMessageAC> | ReturnType<typeof onMessageChangeAC>\r\n\r\nexport const addMessageAC = (messageText: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messageText: messageText\r\n    } as const\r\n}\r\n\r\nexport const onMessageChangeAC = (newMessage: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE,\r\n        newMessage: newMessage\r\n    } as const\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\n\r\n\r\ntype DialogItemProps = {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport function DialogItem(props: DialogItemProps) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype DialogMessageProps = {\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport function Message(props: DialogMessageProps) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {addMessageAC, DialogPageType, onMessageChangeAC} from \"../../redux/dialogsReducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n//здесь пример с использование Consumer\r\n/*export function DialogsContainer(props: DialogsContainerProps) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                const state = store.getState();\r\n\r\n                const addMessage = (messageText: string) => {\r\n                    store.dispatch(addMessageAC(messageText))\r\n                    store.dispatch(onMessageChangeAC(''))\r\n                }\r\n                const onMessageChange = (newMessage: string) => {\r\n                    store.dispatch(onMessageChangeAC(newMessage))\r\n                }\r\n\r\n                return <Dialogs dialogPage={state.dialogPage}\r\n                                addMessage={addMessage}\r\n                                onMessageChange={onMessageChange}/>\r\n            }}\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\ntype MapStatePropsType = {\r\n    dialogPage: DialogPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (messageText: string) => {\r\n            dispatch(addMessageAC(messageText))\r\n        },\r\n        onMessageChange: (newMessage: string) => {\r\n            dispatch(onMessageChangeAC(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../redux/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\ntype DialogsProps = {\r\n    dialogPage: DialogPageType;\r\n    addMessage: (messageText: string) => void\r\n    onMessageChange: (newMessage: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Dialogs(props: DialogsProps) {\r\n\r\n    const addMessage = () => {\r\n        props.addMessage(props.dialogPage.newTextMessage)\r\n        props.onMessageChange('')\r\n    }\r\n    const onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onMessageChange(e.currentTarget.value)\r\n    }\r\n\r\n    let dialogElements =\r\n        props.dialogPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n    let messagesElements =\r\n        props.dialogPage.messages.map(msg => <Message key={msg.id} message={msg.message} id={msg.id}/>);\r\n\r\n    if(!props.isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <>\r\n            <textarea value={props.dialogPage.newTextMessage}\r\n                      onChange={onMessageChange}\r\n                      placeholder={'Enter your message'}/>\r\n\r\n            <div>\r\n                <button className={s.button} onClick={addMessage}>Add Message</button>\r\n            </div>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogsItem}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        'API-KEY': 'a00ef78b-3360-4cfb-a08a-5146df137c1f'\r\n    }\r\n})\r\n\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageLimit = 4) {\r\n        return instance.get(`/users?page=${currentPage}&count=${pageLimit}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId = 2) {\r\n        return instance.post(`/follow/${userId}`, {}).then(response => response.data)\r\n    },\r\n    unfollowUser(userId = 2) {\r\n        return instance.delete(`/follow/${userId}`).then(response => response.data)\r\n    },\r\n    getUsersProfile(userId: string) {\r\n        return instance.get(`/profile/` + userId).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const AuthAPI = {\r\n    me () {\r\n        return instance.get('/auth/me').then(response => response.data)\r\n    }\r\n}","import {UserAPI} from \"../api/Api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport  type LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type FriendType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type initialStateType = {\r\n    friends: Array<FriendType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    friends: [],\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, followed: true} : f)};\r\n\r\n        case \"UNFOLLOW\":\r\n            return {...state, friends: state.friends.map(f => f.id === action.userId ? {...f, followed: false} : f)};\r\n\r\n        case \"SET-FRIENDS\":\r\n            return {...state, friends: action.friends}\r\n\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case \"FOLLOWING-PROGRESS\":\r\n            return action.isFetching\r\n                ? {...state, followingInProgress: [...state.followingInProgress, action.userId]}\r\n                : {...state, followingInProgress: state.followingInProgress.filter(id => id !== action.userId)}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setFriends>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof followingProgress>\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userId\r\n    } as const\r\n}\r\nexport const setFriends = (friends: Array<FriendType>) => {\r\n    return {\r\n        type: \"SET-FRIENDS\",\r\n        friends\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const followingProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: \"FOLLOWING-PROGRESS\",\r\n        isFetching, userId\r\n    } as const\r\n}\r\n\r\nexport const followTC = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(followingProgress(true, userId))\r\n        UserAPI.followUser(userId).then(data => {\r\n            if (data.resultCode === 0) dispatch(follow(userId))\r\n            dispatch(followingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\nexport const unfollowTC = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(followingProgress(true, userId))\r\n        UserAPI.unfollowUser(userId).then(data => {\r\n            if (data.resultCode === 0) dispatch(unfollow(userId))\r\n            dispatch(followingProgress(false, userId))\r\n        })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/avatarnotfound.86317f4b.jpg\";","import React from \"react\";\r\nimport s from \"./Friends.module.css\";\r\nimport userPhoto from \"../../assets/images/avatarnotfound.jpg\";\r\nimport {initialStateType} from \"../../redux/friendsReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\ntype FriendsPropsType = {\r\n    friendsPage: initialStateType\r\n    followingInProgress: Array<number>\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n\r\nexport const Friends = (\r\n    {\r\n        friendsPage,\r\n        followingInProgress,\r\n        followTC,\r\n        unfollowTC,\r\n    }: FriendsPropsType) => {\r\n\r\n    const followHandler = (fId: number, followStatus: boolean) => {\r\n        followStatus\r\n            ? unfollowTC(fId)\r\n            : followTC(fId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*<div>\r\n                    {pages.map(p => {\r\n                            return <span className={`${this.props.currentPage === p && s.selectedPage}`}\r\n                            onClick={()=>this.currentPageHandler(p)}>\r\n                                {p}</span>\r\n                        }\r\n                    )}\r\n                </div>\r\n*/}\r\n            {friendsPage.friends.map(f => <div key={f.id} className={s.friendsItem}>\r\n                <span className={s.generalBlock}>\r\n                    <div>\r\n                        <NavLink to={PATH.PROFILE + f.id}>\r\n                            <img className={s.avatar} alt={'userAvatar'}\r\n                                 src={f.photos.small != null ? f.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <span className={s.info}>\r\n                        <div className={s.name}>{f.name}</div>\r\n                        <div>{f.status}</div>\r\n                    </span>\r\n\r\n                    <span className={s.location}>\r\n                        <div>{'f.location.country'}</div>\r\n                        <div>{'f.location.city'}</div>\r\n\r\n                        <button className={s.buttonFollow}\r\n                                onClick={() => {\r\n                                    followHandler(f.id, f.followed)\r\n                                }}\r\n                                disabled={followingInProgress.some(id => id === f.id)}>\r\n                            {f.followed ? \"Follow\" : \"Unfollow\"}\r\n                        </button>\r\n\r\n                    </span>\r\n\r\n                </span>\r\n\r\n            </div>)}\r\n        </>\r\n    )\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rings.dbfd1db7.svg\";","import React from \"react\";\r\nimport s from './Preloader.module.css'\r\nimport loadingGif from \"../../assets/images/rings.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img className={s.loading} src={loadingGif} alt='loading'/>\r\n    </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {followTC, initialStateType, unfollowTC} from \"../../redux/friendsReducer\";\r\nimport React from \"react\";\r\nimport {Friends} from \"./Friends\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass FriendsAPIComponent extends React.Component<FriendsAPIComponentPropsType> {\r\n\r\n    render(): React.ReactNode {\r\n        return <div>\r\n            {this.props.isFetching ? <Preloader/>\r\n                : <Friends friendsPage={this.props.friendsPage}\r\n                           followingInProgress = {this.props.followingInProgress}\r\n                           followTC={this.props.followTC}\r\n                           unfollowTC={this.props.unfollowTC}\r\n\r\n                />}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport type FriendsAPIComponentPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nexport type mapStatePropsType = {\r\n    friendsPage: initialStateType\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type mapDispatchPropsType = {\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        friendsPage: state.friendsPage,\r\n        isFetching: state.friendsPage.isFetching,\r\n        followingInProgress: state.friendsPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\nexport const FriendsContainer = connect(mapStateToProps,\r\n    {followTC, unfollowTC})(FriendsAPIComponent)\r\n","import React from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\nimport {LEFT_PAGE, RIGHT_PAGE} from \"./PaginationContainer\";\r\n\r\ntype PaginationPropsType = {\r\n    pageLimit: number\r\n    totalRecords: number\r\n    currentPage: number\r\n    fetchPageNumbers: () => (string | number)[]\r\n    handleClick: (page: number | string) => void\r\n    handleMoveLeft: () => void\r\n    handleMoveRight: () => void\r\n}\r\n\r\nexport const Pagination: React.FC<PaginationPropsType> = (\r\n    {\r\n        totalRecords,\r\n        pageLimit,\r\n        fetchPageNumbers,\r\n        currentPage,\r\n        handleClick,\r\n        handleMoveLeft,\r\n        handleMoveRight,\r\n\r\n    }) => {\r\n\r\n    const totalPages = Math.ceil(totalRecords / pageLimit);\r\n    const pages = fetchPageNumbers()\r\n    if (!totalRecords || totalPages === 1) return null\r\n\r\n    return (\r\n            <nav className={s.paginationBlock}>\r\n                <div className={s.totalCounter}>\r\n                    <span className={s.selectedItem}>{totalRecords}</span> Users\r\n                </div>\r\n\r\n                <div className={s.currentPage}>\r\n                    Page <span className={s.selectedItem}>{currentPage}</span>/{totalPages}\r\n                </div>\r\n\r\n                <ul className={s.totalBlocks}>\r\n                    {pages.map((page, index) => {\r\n                        if (page === LEFT_PAGE) return (\r\n                            <li key={index} className={s.pageItem}>\r\n                                <span aria-hidden=\"true\"\r\n                                      onClick={handleMoveLeft}>&laquo;</span>\r\n                            </li>\r\n                        );\r\n\r\n                        if (page === RIGHT_PAGE) return (\r\n                            <li key={index} className={s.pageItem}>\r\n                                <span aria-hidden=\"true\"\r\n                                      onClick={handleMoveRight}>&raquo;</span>\r\n                            </li>\r\n                        );\r\n\r\n                        return (\r\n                            <>\r\n                                <li key={index}\r\n                                    className={`${s.pageItem} ${currentPage === page && s.selectedPage}`}\r\n                                    onClick={() => handleClick(page)}>\r\n                                    {page}\r\n                                </li>\r\n\r\n                            </>\r\n                        )\r\n\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n","import {setFriends, toggleIsFetching} from \"./friendsReducer\";\r\nimport {UserAPI} from \"../api/Api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type initialStateType = {\r\n    pageLimit: number\r\n    totalCount: number\r\n    pageNeighbours: number\r\n    currentPage: number\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    totalCount: 0,\r\n    pageLimit: 4,\r\n    pageNeighbours: 1,\r\n    currentPage: 1,\r\n}\r\n\r\nexport const paginationReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.page}\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setFriends>\r\n    | ReturnType<typeof toggleIsFetching>\r\n\r\n\r\nexport const setTotalCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-COUNT\",\r\n        totalCount\r\n    } as const\r\n}\r\nexport const setCurrentPage = (page: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        page\r\n    } as const\r\n}\r\n\r\nexport const getUsersTC = (currentPage: number, pageLimit: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n\r\n        UserAPI.getUsers(currentPage, pageLimit).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setFriends(data.items));\r\n            dispatch(setTotalCount(data.totalCount))\r\n        })\r\n    }\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Pagination} from \"./Pagination\";\r\nimport {getUsersTC,  setTotalCount} from \"../../../redux/paginationReducer\";\r\n\r\n\r\nexport const LEFT_PAGE = 'LEFT';\r\nexport const RIGHT_PAGE = 'RIGHT';\r\n\r\nconst range = (from: number | string, to: number, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        typeof i === \"number\" ? i += step : i = 0;\r\n    }\r\n\r\n    return range;\r\n}\r\n\r\n//https://www.digitalocean.com/community/tutorials/how-to-build-custom-pagination-with-react-ru\r\n\r\nclass PaginationAPIComponent extends React.Component<PaginationAPIComponentPropsType> {\r\n    componentDidMount(): void {\r\n        /*this.props.toggleIsFetching(true)\r\n        getUsers(this.props.currentPage, this.props.pageLimit).then(data => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setFriends(data.items);\r\n                this.props.setTotalCount(data.totalCount)\r\n            })*/\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageLimit)\r\n    }\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = Math.ceil(this.props.totalRecords / this.props.pageLimit);\r\n        const currentPage = this.props.currentPage;\r\n        const pageNeighbours = this.props.pageNeighbours;\r\n\r\n        const totalNumbers = (pageNeighbours * 2) + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            const startPage = Math.max(2, currentPage - pageNeighbours);\r\n            const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n            let pages = range(startPage, endPage);\r\n            const hasLeftSpill = startPage > 2;\r\n            const hasRightSpill = (totalPages - endPage) > 1;\r\n            const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n            switch (true) {\r\n                // handle: (1) < {5 6} [7] {8 9} (10)\r\n                case (hasLeftSpill && !hasRightSpill): {\r\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\r\n                    pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) {2 3} [4] {5 6} > (10)\r\n                case (!hasLeftSpill && hasRightSpill): {\r\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\r\n                    pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) < {4 5} [6] {7 8} > (10)\r\n                case (hasLeftSpill && hasRightSpill):\r\n                default: {\r\n                    pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    }\r\n\r\n    handleClick = (page: number | string) => {\r\n\r\n        if (typeof page === \"number\") {\r\n            this.props.getUsersTC(page, this.props.pageLimit)\r\n        }\r\n    }\r\n    handleMoveLeft = () => {\r\n        const previousPage = this.props.currentPage - (this.props.pageNeighbours * 2) - 1\r\n        this.props.getUsersTC(previousPage, this.props.pageLimit)\r\n    }\r\n    handleMoveRight = () => {\r\n        const nextPage = this.props.currentPage + (this.props.pageNeighbours * 2) + 1\r\n        this.props.getUsersTC(nextPage, this.props.pageLimit)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Pagination pageLimit={this.props.pageLimit}\r\n                           totalRecords={this.props.totalRecords}\r\n                           currentPage={this.props.currentPage}\r\n                           fetchPageNumbers={this.fetchPageNumbers}\r\n                           handleClick={this.handleClick}\r\n                           handleMoveLeft={this.handleMoveLeft}\r\n                           handleMoveRight={this.handleMoveRight}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nexport type PaginationAPIComponentPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nexport type mapStatePropsType = {\r\n    pageLimit: number\r\n    totalRecords: number\r\n    pageNeighbours: number\r\n    currentPage: number\r\n\r\n}\r\nexport type mapDispatchPropsType = {\r\n    setTotalCount: (totalCount: number) => void\r\n    getUsersTC: (currentPage: number, pageLimit: number) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        pageLimit: state.pagination.pageLimit,\r\n        totalRecords: state.pagination.totalCount,\r\n        pageNeighbours: state.pagination.pageNeighbours,\r\n        currentPage: state.pagination.currentPage,\r\n\r\n    }\r\n}\r\n/*const mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        setFriends: (friends: Array<FriendType>) => {\r\n            dispatch(setFriendsAC(friends))\r\n        },\r\n        setCurrentPage: (page: number) => {\r\n            dispatch(setCurrentPageAC(page))\r\n        },\r\n        setTotalCount: (totalCount: number) => {\r\n            dispatch(setTotalCountAC(totalCount))\r\n        },\r\n        isFetchingHandler: (isFetching: boolean) => {\r\n            dispatch(isFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport const PaginationContainer = connect(mapStateToProps, {\r\n    setTotalCount,\r\n    getUsersTC: getUsersTC,\r\n})(PaginationAPIComponent)\r\n","import React from \"react\";\r\nimport {FriendsContainer} from \"./FriendsContainer\";\r\nimport {PaginationContainer} from \"./Pagination/PaginationContainer\";\r\n\r\nexport const FriendsPage = () => {\r\n    return (\r\n        <>\r\n            <PaginationContainer/>\r\n            <FriendsContainer/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {UserAPI} from \"../api/Api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE';\r\n\r\nexport type PostType = {\r\n    id: number;\r\n    message: string;\r\n    likeCount: number;\r\n}\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: string | null\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: null,\r\n    github: string\r\n    mainLink: null\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    \"contacts\": ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosType\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likeCount: 12},\r\n        {id: 2, message: \"It's my first post\", likeCount: 24},\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.postText,\r\n                likeCount: 0\r\n            }\r\n\r\n            return {...state, posts: [...state.posts, newPost], newPostText: ''};\r\n\r\n        case UPDATE_NEW_POST:\r\n            return {...state, newPostText: action.newText};\r\n\r\n        case \"SET-USERS-PROFILE\":\r\n            return {...state, profile: action.profile}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof onPostChangeAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n\r\nexport const addPostAC = (postText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postText\r\n    } as const\r\n}\r\n\r\nexport const onPostChangeAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST,\r\n        newText\r\n    } as const\r\n}\r\nexport const setUsersProfile = (profile: ProfileType | null) => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n       profile\r\n    } as const\r\n}\r\n\r\nexport const getUserProfileTC = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UserAPI.getUsersProfile(userId).then(data => {\r\n            dispatch(setUsersProfile(data));\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostTypeProps = {\r\n    message: string;\r\n    id: number;\r\n    likeCount: number;\r\n}\r\n\r\nexport function Post(props: PostTypeProps) {\r\n    return (\r\n        <div>\r\n            <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like: {props.likeCount} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {addPostAC, onPostChangeAC, ProfilePageType} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfilePageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\nconst mapStatePropsType = (state: AppStateType): MapStatePropsType =>  {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (message: string) => {\r\n            dispatch(addPostAC(message))\r\n        },\r\n        updateNewPost: (newText: string) => {\r\n            dispatch(onPostChangeAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStatePropsType, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from 'react';\r\nimport s from \"./MyPost.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../redux/profileReducer\";\r\n\r\n\r\ntype MyPostsProps = {\r\n    profilePage: ProfilePageType\r\n    addPost: (message: string) => void\r\n    updateNewPost: (newText: string) => void\r\n}\r\n\r\n\r\nexport function MyPosts(props: MyPostsProps) {\r\n\r\n    const addPost = () => {\r\n        props.addPost(props.profilePage.newPostText)\r\n        props.updateNewPost('')\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewPost(e.currentTarget.value)\r\n    }\r\n\r\n    let postsElement =\r\n        props.profilePage.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts:</h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={props.profilePage.newPostText} onChange={onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button className={s.button} onClick={addPost}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/noavatar.8233c8b6.png\";","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/noavatar.png\";\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.cover}>\r\n                <img\r\n                    src='https://catherineasquithgallery.com/uploads/posts/2021-02/1612889502_62-p-krasnii-kiberpank-fon-101.jpg'\r\n                    alt='cover'/>\r\n            </div>\r\n            <div className={s.contentInfo}>\r\n                <div className={s.mainAvatar}>\r\n                    <img src={profile.photos.small ? profile.photos.small : userPhoto}\r\n                         alt='avatar'/>\r\n                </div>\r\n                <div className={s.describeProfile}>\r\n                    <h4>Basic Information</h4>\r\n                    <hr/>\r\n                    <div className={s.basicBlock}>\r\n                        <div className={`${s.basicItem} ${s.order}`}>\r\n                            Name:<br/>\r\n                            About me:<br/>\r\n                            Profession:<br/>\r\n                            Status:<br/>\r\n                        </div>\r\n                        <div className={s.basicItem}>\r\n                            {profile.fullName ? profile.fullName : 'no information'}<br/>\r\n                            {profile.aboutMe ? profile.aboutMe : 'no information'}<br/>\r\n                            {profile.lookingForAJob ? \"I'm locking for a job\"\r\n                                : profile.lookingForAJobDescription ? profile.lookingForAJobDescription\r\n                                    : 'no information'}<br/>\r\n                            {profile.lookingForAJobDescription ? profile.lookingForAJobDescription\r\n                                : 'no information'}<br/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h4>Contact Information</h4>\r\n                    <hr/>\r\n                    <div className={s.basicBlock}>\r\n                        <div className={`${s.basicItem} ${s.order}`}>\r\n                            Facebook:<br/>\r\n                            VK:<br/>\r\n                            Instagram:<br/>\r\n                            GitHub:<br/>\r\n                        </div>\r\n                        <div className={s.basicItem}>\r\n                            {profile.contacts.facebook ? profile.contacts.facebook : 'no information'}<br/>\r\n                            {profile.contacts.vk ? profile.contacts.vk : 'no information'}<br/>\r\n                            {profile.contacts.instagram ? profile.contacts.instagram : 'no information'}<br/>\r\n                            {profile.contacts.github ? profile.contacts.github : 'no information'}<br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from \"../../redux/profileReducer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n   profile: ProfileType | null\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({profile}) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getUserProfileTC, ProfileType} from \"../../redux/profileReducer\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfileTC(userId)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        if (!this.props.isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return (\r\n            <Profile profile={this.props.profile}/>\r\n        );\r\n    }\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: ProfileType | null\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUserProfileTC: (userId: string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfileTC})(WithUrlDataContainerComponent)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({isAuth, login}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://pbs.twimg.com/profile_banners/1341675636151132160/1608715543/1500x500' alt='label'/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? login\r\n                    : <NavLink to={PATH.LOGIN}>LOGIN</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AuthAPI} from \"../api/Api\";\r\n\r\nexport type initialStateType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {...state, ...action.data, isAuth: true}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setAuthUserData>\r\n\r\n\r\nexport const setAuthUserData = (userId: string, email: string, login: string) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        data: {userId, email, login}\r\n    } as const\r\n}\r\nexport const getUserAPIDataTC = () => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        AuthAPI.me().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport { getUserAPIDataTC } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        this.props.getUserAPIDataTC()\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login}/>\r\n    }\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    id: string | null\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUserAPIDataTC: () => void\r\n}\r\ntype PropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        id: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserAPIDataTC})(HeaderContainer)","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return <div>\r\n        LOGIN\r\n    </div>\r\n}","import React from 'react';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport './App.css';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {FriendsPage} from \"./components/Friends/FriendsPage\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport {Login} from \"./components/Login/Login\";\n\n\ntype AppPropsType = {\n    /*store: StoreType*/\n}\nexport const PATH = {\n    PROFILE: '/profile/',\n    DIALOGS: '/dialogs/',\n    NEWS: '/news/',\n    MUSIC: '/music/',\n    SETTINGS: '/settings/',\n    FIND_FRIENDS: '/findFriends/',\n    LOGIN: '/login/',\n}\n\n\nfunction App(props: AppPropsType) {\n    /* const state = props.store.getState();*/\n\n    return (\n        <HashRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='content'>\n                    <Switch>\n                        <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                        <Route path={PATH.PROFILE + ':userId'}\n                               render={() => <ProfileContainer/>}/>\n                        <Route path={PATH.DIALOGS}\n                               render={() => <DialogsContainer/>}/>\n                        <Route path={PATH.NEWS} render={() => <News/>}/>\n                        <Route path={PATH.MUSIC} render={() => <Music/>}/>\n                        <Route path={PATH.FIND_FRIENDS} render={() => <FriendsPage/>}/>\n                        <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\n                        <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                    </Switch>\n                </div>\n\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","export type SidebarType = {}\r\n\r\nconst initialState: SidebarType = {}\r\n\r\nexport const sideBarReducer = (state = initialState, action: any): SidebarType => {\r\n\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {dialogReducer} from \"./dialogsReducer\";\r\nimport {sideBarReducer} from \"./sideBarReducer\";\r\nimport {friendsReducer} from \"./friendsReducer\";\r\nimport {paginationReducer} from \"./paginationReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sideBarReducer,\r\n    friendsPage: friendsReducer,\r\n    pagination: paginationReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/redux-store\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zCja\",\"item\":\"Navbar_item__24pIL\",\"active\":\"Navbar_active__3Lxyu\"};"],"sourceRoot":""}