{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPost.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","reportWebVitals.ts","redux/state.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST","store","_state","profilePage","posts","id","message","likeCount","newPostText","dialogPage","dialogs","name","messages","sidebar","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","Date","getTime","postText","push","newText","onPostChangeAC","Header","className","s","header","src","Navbar","nav","item","to","PATH","PROFILE","activeClassName","active","DIALOGS","NEWS","MUSIC","SETTINGS","Post","props","MyPosts","postsElement","map","p","postBlock","value","onChange","e","currentTarget","button","onClick","ProfileInfo","cover","contentInfo","mainAvatar","describeProfile","Profile","content","state","DialogItem","path","dialog","Message","Dialogs","newMessageElement","React","createRef","dialogElements","d","messagesElements","msg","ref","alert","current","dialogsItem","News","Music","Settings","App","exact","render","renderTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,mBCAjFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,WAAa,gCAAgC,MAAQ,2BAA2B,gBAAkB,uC,gBCAnKD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,yB,gBCA/FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,mBCA3GD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,kBCA/DD,EAAOC,QAAU,CAAC,OAAS,yB,4ICaZC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QC6BRQ,EAAW,WACXC,EAAkB,kBAEXC,EAAmB,CAC5BC,OAAQ,CACJC,YAAa,CACTC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,UAAW,IAChD,CAACF,GAAI,EAAGC,QAAS,qBAAsBC,UAAW,KAEtDC,YAAa,IAEjBC,WAAY,CACRC,QAAS,CACL,CAACL,GAAI,EAAGM,KAAM,SACd,CAACN,GAAI,EAAGM,KAAM,SACd,CAACN,GAAI,EAAGM,KAAM,QACd,CAACN,GAAI,EAAGM,KAAM,UAElBC,SAAU,CACN,CAACP,GAAI,EAAGC,QAAS,oBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,cACjB,CAACD,GAAI,EAAGC,QAAS,wBAGzBO,QAAS,IAEbC,gBAzB4B,WA0BxBC,QAAQC,IAAI,YAEhBC,SA5B4B,WA6BxB,OAAOC,KAAKhB,QAEhBiB,UA/B4B,SA+BlBC,GACNF,KAAKJ,gBAAkBM,GAG3BC,SAnC4B,SAmClBC,GACN,GAAIA,EAAOC,OAASxB,EAAU,CAC1B,IAAMyB,EAAqB,CACvBnB,IAAI,IAAIoB,MAAOC,UACfpB,QAASgB,EAAOK,SAChBpB,UAAW,GAEfW,KAAKhB,OAAOC,YAAYC,MAAMwB,KAAKJ,GACnCN,KAAKJ,uBACEQ,EAAOC,OAASvB,IACvBkB,KAAKhB,OAAOC,YAAYK,YAAcc,EAAOO,QAC7CX,KAAKJ,qBAYJgB,EAAiB,SAACD,GAC3B,MAAO,CACHN,KAAMvB,EACN6B,QAASA,I,iDCnGV,SAASE,IACZ,OAEQ,wBAAQC,UAAWC,IAAEC,OAArB,SACI,qBAAKC,IAAI,oF,2BCFlB,SAASC,IAEZ,OACQ,sBAAKJ,UAAWC,IAAEI,IAAlB,UACI,qBAAKL,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,EAAKC,QAASC,gBAAiBT,IAAEU,OAA9C,uBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,EAAKI,QAASF,gBAAiBT,IAAEU,OAA9C,wBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,EAAKK,KAAMH,gBAAiBT,IAAEU,OAA3C,oBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,EAAKM,MAAOJ,gBAAiBT,IAAEU,OAA5C,qBAEJ,qBAAKX,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIC,EAAKO,SAAUL,gBAAiBT,IAAEU,OAA/C,2B,uDCbb,SAASK,EAAKC,GACjB,OACI,8BACI,qBAAKjB,UAAWC,IAAE7B,MAAlB,SACI,sBAAK4B,UAAWC,IAAEK,KAAlB,UACI,qBAAKH,IAAI,sDACRc,EAAM3C,QACP,8BACI,0CAAa2C,EAAM1C,UAAnB,gBCJjB,SAAS2C,EAAQD,GAEpB,IAQIE,EACAF,EAAM7C,MAAMgD,KAAI,SAAAC,GAAC,OAAI,cAACL,EAAD,CAAiB3C,GAAIgD,EAAEhD,GAAIC,QAAS+C,EAAE/C,QAASC,UAAW8C,EAAE9C,WAAjD8C,EAAEhD,OAEtC,OACI,sBAAK2B,UAAWC,IAAEqB,UAAlB,UACI,gCACI,2CACA,gCACI,8BACI,0BAAUC,MAAON,EAAM3C,QAASkD,SAb/B,SAACC,GAClBR,EAAM5B,SAASS,EAAe2B,EAAEC,cAAcH,aAclC,8BACI,wBAAQvB,UAAWC,IAAE0B,OAAQC,QApBjC,WJ6EM,IAACjC,EI5EnBsB,EAAM5B,UJ4EaM,EI5EMsB,EAAM3C,QJ6E5B,CACHiB,KAAMxB,EACN4B,SAAUA,KI9EVsB,EAAM5B,SAASS,EAAe,MAkBd,8BAIZ,qBAAKE,UAAWC,IAAE7B,MAAlB,SACK+C,O,qBCpCV,SAASU,IACZ,OACI,gCACI,qBAAK7B,UAAWC,IAAE6B,MAAlB,SACI,qBACI3B,IAAI,8GAEZ,sBAAKH,UAAWC,IAAE8B,YAAlB,UACI,qBAAK/B,UAAWC,IAAE+B,WAAlB,SACI,qBAAK7B,IAAI,wDAEb,qBAAKH,UAAWC,IAAEgC,gBAAlB,0CCHT,SAASC,EAAQjB,GAEpB,OACI,sBAAKjB,UAAWC,IAAEkC,QAAlB,UACI,cAACN,EAAD,IACA,cAACX,EAAD,CAAS9C,MAAO6C,EAAMmB,MAAMhE,MACnBE,QAAS2C,EAAMmB,MAAM5D,YACrBa,SAAU4B,EAAM5B,c,sCCR9B,SAASgD,EAAWpB,GACvB,IAAIqB,EAAO,YAAcrB,EAAM5C,GAC/B,OACI,qBAAK2B,UAAWC,IAAEsC,OAAlB,SACI,cAAC,IAAD,CAAShC,GAAI+B,EAAM5B,gBAAiBT,IAAEU,OAAtC,SAA+CM,EAAMtC,S,qBCP1D,SAAS6D,EAAQvB,GACpB,OACI,qBAAKjB,UAAWC,IAAE3B,QAAlB,SACK2C,EAAM3C,UCAZ,SAASmE,EAAQxB,GACpB,IAAMyB,EAAoBC,IAAMC,YAK5BC,EACA5B,EAAMmB,MAAM1D,QAAQ0C,KAAI,SAAA0B,GAAC,OAAI,cAACT,EAAD,CAAuB1D,KAAMmE,EAAEnE,KAAMN,GAAIyE,EAAEzE,IAA1ByE,EAAEzE,OAEhD0E,EACA9B,EAAMmB,MAAMxD,SAASwC,KAAI,SAAA4B,GAAG,OAAI,cAACR,EAAD,CAAsBlE,QAAS0E,EAAI1E,QAASD,GAAI2E,EAAI3E,IAAtC2E,EAAI3E,OAEtD,OACI,qCACI,0BAAU4E,IAAKP,IAEf,8BACI,wBAAQd,QAfD,WAAO,IAAD,EACrBsB,MAAK,UAACR,EAAkBS,eAAnB,aAAC,EAA2B5B,QAczB,2BAGJ,sBAAKvB,UAAWC,IAAEvB,QAAlB,UAII,qBAAKsB,UAAWC,IAAEmD,YAAlB,SACKP,IAEL,qBAAK7C,UAAWC,IAAErB,SAAlB,SACKmE,U,WCrCd,SAASM,IACZ,OACI,uCCFD,SAASC,IACZ,OACI,wCCFD,SAASC,IACZ,OACI,2CCaD,IAAM/C,EAAO,CAChBC,QAAS,WACTG,QAAS,WACTC,KAAM,QACNC,MAAO,SACPC,SAAU,aAiCCyC,MA7Bf,SAAavC,GACT,IAAMmB,EAAQnB,EAAMhD,MAAMgB,WAE1B,OACI,cAAC,IAAD,UACI,sBAAKe,UAAU,cAAf,UACI,cAACD,EAAD,IACA,cAACK,EAAD,IACA,qBAAKJ,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsC,KAAM,IAAKmB,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUnD,GAAIC,EAAKC,aAEzD,cAAC,IAAD,CAAO6B,KAAM9B,EAAKC,QACXiD,OAAQ,kBAAM,cAACxB,EAAD,CAASE,MAAOA,EAAMjE,YACbkB,SAAU4B,EAAM5B,cAE9C,cAAC,IAAD,CAAOiD,KAAM9B,EAAKI,QACX8C,OAAQ,kBAAM,cAACjB,EAAD,CAASL,MAAOA,EAAM3D,gBAC3C,cAAC,IAAD,CAAO6D,KAAM9B,EAAKK,KAAM6C,OAAQ,kBAAM,cAACL,EAAD,OACtC,cAAC,IAAD,CAAOf,KAAM9B,EAAKM,MAAO4C,OAAQ,kBAAM,cAACJ,EAAD,OACvC,cAAC,IAAD,CAAOhB,KAAM9B,EAAKO,SAAU2C,OAAQ,kBAAM,cAACH,EAAD,kBCvC5DI,EAAa,WACfC,IAASF,OACL,cAAC,IAAMG,WAAP,UACI,cAAC,EAAD,CAAK5F,MAAOA,EAAOoB,SAAWpB,EAAMoB,SAASyE,KAAK7F,OAEtD8F,SAASC,eAAe,UAGhCL,IACA1F,EAAMkB,UAAUwE,GAKhBrG,M","file":"static/js/main.8006d626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zCja\",\"item\":\"Navbar_item__24pIL\",\"active\":\"Navbar_active__3Lxyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentInfo\":\"ProfileInfo_contentInfo__2zTE7\",\"mainAvatar\":\"ProfileInfo_mainAvatar__2z29I\",\"cover\":\"ProfileInfo_cover__2z3gO\",\"describeProfile\":\"ProfileInfo_describeProfile__1_7Ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1hg6I\",\"posts\":\"MyPost_posts__9OGtt\",\"button\":\"MyPost_button__6BLQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FZa8\",\"dialogsItem\":\"Dialogs_dialogsItem__1PTrf\",\"messages\":\"Dialogs_messages__XRR94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rw3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__-cKzQ\",\"active\":\"DialogItem_active__gIi1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1vXGy\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type MessagesType = {\r\n    id: number;\r\n    message: string;\r\n}\r\nexport type DialogsType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type PostsType = {\r\n    id: number;\r\n    message: string;\r\n    likeCount: number;\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>;\r\n    newPostText: string\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogsType>;\r\n    messages: Array<MessagesType>;\r\n}\r\nexport type SidebarType = {}\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType;\r\n    dialogPage: DialogPageType;\r\n    sidebar: SidebarType;\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _callSubscriber: () => void\r\n    getState: () => RootStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionSType) => void\r\n}\r\n\r\nexport type ActionSType = ReturnType<typeof addPostAC> | ReturnType<typeof onPostChangeAC>;\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: \"Hi, how are you?\", likeCount: 12},\r\n                {id: 2, message: \"It's my first post\", likeCount: 24},\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogPage: {\r\n            dialogs: [\r\n                {id: 1, name: \"Terra\"},\r\n                {id: 2, name: \"Azumy\"},\r\n                {id: 3, name: \"Bria\"},\r\n                {id: 4, name: \"Keren\"}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: \"Hi! How are yoy?\"},\r\n                {id: 2, message: \"Don't give up!\"},\r\n                {id: 3, message: \"Just do it\"},\r\n                {id: 4, message: \"Could you help me?\"}\r\n            ]\r\n        },\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber() {\r\n        console.log('Changed')\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch (action) {\r\n        if (action.type === ADD_POST) {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.postText,\r\n                likeCount: 0\r\n            }\r\n            this._state.profilePage.posts.push(newPost)\r\n            this._callSubscriber()\r\n        } else if (action.type === UPDATE_NEW_POST) {\r\n            this._state.profilePage.newPostText = action.newText\r\n            this._callSubscriber()\r\n        }\r\n    }\r\n}\r\n\r\nexport const  addPostAC = (postText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postText: postText\r\n    } as const\r\n}\r\n\r\nexport const onPostChangeAC = (newText: string)=> {\r\n    return {\r\n        type: UPDATE_NEW_POST,\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nexport function Header() {\r\n    return (\r\n\r\n            <header className={s.header}>\r\n                <img src='https://pbs.twimg.com/profile_banners/1341675636151132160/1608715543/1500x500' />\r\n            </header>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport function Navbar () {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.DIALOGS} activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.NEWS} activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.MUSIC} activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={PATH.SETTINGS} activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostTypeProps = {\r\n    message: string;\r\n    id: number;\r\n    likeCount: number;\r\n}\r\n\r\nexport function Post(props: PostTypeProps) {\r\n    return (\r\n        <div>\r\n            <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like: {props.likeCount} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from \"./MyPost.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ActionSType, addPostAC, onPostChangeAC, PostsType} from \"../../../redux/state\";\r\n\r\n\r\ntype MyPostsProps = {\r\n    posts: Array<PostsType>;\r\n    message: string\r\n    dispatch: (action: ActionSType) => void\r\n}\r\n\r\n\r\nexport function MyPosts(props: MyPostsProps) {\r\n\r\n    const addPost = () => {\r\n        props.dispatch(addPostAC(props.message))\r\n        props.dispatch(onPostChangeAC(''))\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(onPostChangeAC(e.currentTarget.value))\r\n    }\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts:</h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={props.message} onChange={onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button className={s.button} onClick={addPost}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div className={s.cover}>\r\n                <img\r\n                    src='https://catherineasquithgallery.com/uploads/posts/2021-02/1612889502_62-p-krasnii-kiberpank-fon-101.jpg'/>\r\n            </div>\r\n            <div className={s.contentInfo}>\r\n                <div className={s.mainAvatar}>\r\n                    <img src='https://telegra.ph/file/88a8f1c2805439c4c0d86.jpg'/>\r\n                </div>\r\n                <div className={s.describeProfile}>\r\n                    My profile description\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionSType, ProfilePageType} from \"../../redux/state\";\r\n\r\n\r\ntype ProfileProps = {\r\n    state: ProfilePageType;\r\n    dispatch: (action: ActionSType) => void\r\n}\r\n\r\nexport function Profile(props: ProfileProps) {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.state.posts}\r\n                     message={props.state.newPostText}\r\n                     dispatch={props.dispatch}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\n\r\n\r\ntype DialogItemProps = {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport function DialogItem(props: DialogItemProps) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype DialogMessageProps = {\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport function Message(props: DialogMessageProps) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../redux/state\";\r\n\r\n\r\ntype DialogsProps = {\r\n    state: DialogPageType;\r\n}\r\n\r\nexport function Dialogs(props: DialogsProps) {\r\n    const newMessageElement = React.createRef<HTMLTextAreaElement>()\r\n    const addMessage = () => {\r\n        alert(newMessageElement.current?.value)\r\n    }\r\n\r\n    let dialogElements =\r\n        props.state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n    let messagesElements =\r\n        props.state.messages.map(msg => <Message key={msg.id} message={msg.message} id={msg.id}/>);\r\n\r\n    return (\r\n        <>\r\n            <textarea ref={newMessageElement}/>\r\n\r\n            <div>\r\n                <button onClick={addMessage}>Add Message</button>\r\n            </div>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                {/*<textarea></textarea>\r\n                <button className={s.button}>add message</button>*/}\r\n                <div className={s.dialogsItem}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n           News\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n          Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {ActionSType, StoreType} from \"./redux/state\";\n\n\ntype AppPropsType = {\n    store: StoreType\n    dispatch: (action: ActionSType) => void\n}\nexport const PATH = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs',\n    NEWS: '/news',\n    MUSIC: '/music',\n    SETTINGS: '/settings'\n}\n\n\nfunction App(props: AppPropsType) {\n    const state = props.store.getState();\n\n    return (\n        <HashRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='content'>\n                    <Switch>\n                        <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                        <Route path={PATH.PROFILE}\n                               render={() => <Profile state={state.profilePage}\n                                                      dispatch={props.dispatch}\n                               />}/>\n                        <Route path={PATH.DIALOGS}\n                               render={() => <Dialogs state={state.dialogPage}/>}/>\n                        <Route path={PATH.NEWS} render={() => <News/>}/>\n                        <Route path={PATH.MUSIC} render={() => <Music/>}/>\n                        <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\n                    </Switch>\n                </div>\n\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {RootStateType, store} from \"./redux/state\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst renderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App store={store} dispatch ={store.dispatch.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrenderTree()\nstore.subscribe(renderTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}